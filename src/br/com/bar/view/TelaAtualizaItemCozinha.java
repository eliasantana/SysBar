/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bar.view;

import br.com.bar.model.ProdutoCozinha;
import br.com.bar.util.Util;
import br.com.br.controler.ControlerCozinha;
import java.awt.event.KeyEvent;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author Elias Santana
 */
public class TelaAtualizaItemCozinha extends JDialog {
    ControlerCozinha cc = new ControlerCozinha();
    Util u = new Util();
    
    private ProdutoCozinha produtoCozinha;
    private TelaConzinha telacozinha;

    public TelaAtualizaItemCozinha() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblTítulo = new javax.swing.JLabel();
        txtQtd = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblMsg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(38, 53, 61));
        jPanel1.setLayout(null);

        lblTítulo.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        lblTítulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTítulo.setText("Remover Prato(s)");
        jPanel1.add(lblTítulo);
        lblTítulo.setBounds(10, 0, 230, 33);

        jPanel2.add(jPanel1);
        jPanel1.setBounds(0, 0, 257, 37);

        txtQtd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtQtd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtdKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtdKeyReleased(evt);
            }
        });
        jPanel2.add(txtQtd);
        txtQtd.setBounds(140, 50, 108, 30);

        jLabel1.setText("Informe a quantidade:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 54, 130, 20);

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });
        jPanel2.add(btnConfirmar);
        btnConfirmar.setBounds(12, 108, 117, 31);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancelar);
        btnCancelar.setBounds(135, 108, 114, 31);

        lblMsg.setForeground(new java.awt.Color(255, 51, 51));
        jPanel2.add(lblMsg);
        lblMsg.setBounds(12, 83, 237, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
        );

        setBounds(550, 250, 259, 154);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        //Chama o método valida quantidade
        validaQuantidade();

    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtQtdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtdKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            validaQuantidade();
        }
    }//GEN-LAST:event_txtQtdKeyPressed

    private void txtQtdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtdKeyReleased
        txtQtd.setText(u.tamanhoMaximo(txtQtd.getText(),2));
        txtQtd.setText(txtQtd.getText().replaceAll("[^0-9]",""));
                  
    }//GEN-LAST:event_txtQtdKeyReleased

    public void recebeItemCozinha(TelaConzinha tela, ProdutoCozinha pc) {

        this.produtoCozinha = pc;
        this.telacozinha = tela;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizaItemCozinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizaItemCozinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizaItemCozinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAtualizaItemCozinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAtualizaItemCozinha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblTítulo;
    private javax.swing.JFormattedTextField txtQtd;
    // End of variables declaration//GEN-END:variables

    private void validaQuantidade() {
        // Quantidade a ser removida informada pelo usuário
        int qtdInformada=0;
        try {
            qtdInformada = Integer.parseInt(txtQtd.getText());
            // Verifica se a quantidade informada é igual a quantidade do produto na cozinha
        if (qtdInformada==Integer.parseInt(produtoCozinha.getQtd())){
           // Remove todos os pratos da cozinha 
            if (cc.removePrato(produtoCozinha.getSeq())){
                JOptionPane.showMessageDialog(this, "Prato(s) removido(s) com sucesso!");
                telacozinha.atualizaTabelaCozinha();
                this.dispose();
            }
        }else {            
            // Verifica a quantidade digitada
            if (qtdInformada <= 0 || qtdInformada > Integer.parseInt(produtoCozinha.getQtd())) {
                lblMsg.setText("*Quantidade informada inválida!");
            } else {
                // armazena a quatidade atual e a quantidade informada
                int qtdpedido = Integer.parseInt(produtoCozinha.getQtd());
                int qtdAtualizada = qtdpedido - qtdInformada;
                produtoCozinha.setQtd(String.valueOf(qtdAtualizada));
                // Atualiza o item da cozinha com a nova quantidade
                if (cc.atualizaItemCozinha(produtoCozinha)) {
                    //Informa ao usuário sobre o produto
                    JOptionPane.showMessageDialog(this, "Prato(s) removido(s) com sucesso!");
                    telacozinha.atualizaTabelaCozinha();
                    this.dispose();
                }
                dispose();
            }
        }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Informe um valor válido!");
        }
        
    }
}

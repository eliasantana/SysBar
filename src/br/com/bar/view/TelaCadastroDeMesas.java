/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bar.view;

import br.com.bar.dao.Log;
import br.com.bar.model.Funcionario;
import br.com.bar.model.Mesa;
import br.com.bar.model.TableModelMesas;
import br.com.bar.util.Util;
import br.com.br.controler.ControlerFuncionario;
import br.com.br.controler.ControlerMesa;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author elias
 */
public class TelaCadastroDeMesas extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastroDeMesas
     */
    Mesa m = new Mesa();
    ControlerMesa cm = new ControlerMesa();
    ControlerFuncionario f = new ControlerFuncionario();
    Util u = new Util();
    TableModelMesas modelMesas = new TableModelMesas();
    Log log = new Log();

    boolean filtro = false; // Filtro de listagem de mesa false -> Apenas mesas do garçom selecionado  true -> Todas as mesas
    int estado = 0;

    public TelaCadastroDeMesas() {
        initComponents();
        txtIdGarcom.setVisible(false);
        txtIdMesa.setVisible(false);
        txtIdNovoGarcom.setVisible(false);
        panelTroca.setVisible(false);
        btnLixeira.setEnabled(false);
        lblTrocaTodas.setEnabled(false);
        btnTrocaGarcom.setEnabled(false);

        f.carregaComboFuncionario(comboGarcom, "Garçom");
        
        if (jCheckBoxTudo.isSelected()) {
            filtro = true;
        }

        modelMesas.redimensionaColunas(tblMesas);
        lblOperador.setVisible(false);
        lblCargo.setVisible(false);
        estadoInicial();
    }

    public void recebeOperador(String operador, String cargo) {

        lblOperador.setText(cargo);
        lblCargo.setText(operador);
        log.setUsuario(operador);
        estadoInicial();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        bordas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboGarcom = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNumeroMesa = new javax.swing.JTextField();
        panelTroca = new javax.swing.JPanel();
        comboNovoGarcom = new javax.swing.JComboBox<>();
        lblNovoGarcom = new javax.swing.JLabel();
        btnTrocaGarcom = new javax.swing.JLabel();
        lblTrocaTodas = new javax.swing.JLabel();
        lblCargo = new javax.swing.JLabel();
        lblOperador = new javax.swing.JLabel();
        radioTrocaMesa = new javax.swing.JRadioButton();
        radioTrocaGeral = new javax.swing.JRadioButton();
        menuBar = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        btnLixeira = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMesas = new javax.swing.JTable();
        jCheckBoxTudo = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtIdGarcom = new javax.swing.JTextField();
        txtIdMesa = new javax.swing.JTextField();
        txtIdNovoGarcom = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        bordas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        bordas.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(38, 53, 61));
        jPanel1.setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/logoMesa.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 11, 323, 128);

        jLabel2.setBackground(new java.awt.Color(0, 0, 153));
        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cadastro de Mesas");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 145, 350, 46);

        comboGarcom.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        comboGarcom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboGarcomItemStateChanged(evt);
            }
        });
        comboGarcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGarcomActionPerformed(evt);
            }
        });
        jPanel1.add(comboGarcom);
        comboGarcom.setBounds(17, 281, 238, 38);

        jLabel14.setBackground(new java.awt.Color(52, 73, 94));
        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Garçom");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(17, 251, 60, 25);

        jLabel13.setBackground(new java.awt.Color(52, 73, 94));
        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Mesa");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(265, 251, 40, 25);

        txtNumeroMesa.setFont(new java.awt.Font("Yu Gothic Light", 1, 18)); // NOI18N
        txtNumeroMesa.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroMesa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroMesaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroMesaKeyReleased(evt);
            }
        });
        jPanel1.add(txtNumeroMesa);
        txtNumeroMesa.setBounds(265, 281, 95, 36);

        panelTroca.setBackground(new java.awt.Color(38, 53, 61));

        comboNovoGarcom.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        comboNovoGarcom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboNovoGarcomFocusGained(evt);
            }
        });
        comboNovoGarcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNovoGarcomActionPerformed(evt);
            }
        });

        lblNovoGarcom.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        lblNovoGarcom.setForeground(new java.awt.Color(255, 255, 255));
        lblNovoGarcom.setText("Novo Garçom");

        btnTrocaGarcom.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        btnTrocaGarcom.setForeground(new java.awt.Color(255, 255, 255));
        btnTrocaGarcom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/lapisCinza.png"))); // NOI18N
        btnTrocaGarcom.setText("Troca Garçom");
        btnTrocaGarcom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTrocaGarcomMouseClicked(evt);
            }
        });

        lblTrocaTodas.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        lblTrocaTodas.setForeground(new java.awt.Color(255, 255, 255));
        lblTrocaTodas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/troca.png"))); // NOI18N
        lblTrocaTodas.setText("Trocar todas as mesas");
        lblTrocaTodas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTrocaTodasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelTrocaLayout = new javax.swing.GroupLayout(panelTroca);
        panelTroca.setLayout(panelTrocaLayout);
        panelTrocaLayout.setHorizontalGroup(
            panelTrocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTrocaLayout.createSequentialGroup()
                .addGroup(panelTrocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTrocaLayout.createSequentialGroup()
                        .addGroup(panelTrocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboNovoGarcom, 0, 238, Short.MAX_VALUE)
                            .addComponent(lblNovoGarcom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelTrocaLayout.createSequentialGroup()
                        .addComponent(btnTrocaGarcom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(lblTrocaTodas, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelTrocaLayout.setVerticalGroup(
            panelTrocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTrocaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNovoGarcom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboNovoGarcom, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTrocaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTrocaGarcom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTrocaTodas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        jPanel1.add(panelTroca);
        panelTroca.setBounds(13, 370, 344, 135);

        lblCargo.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        lblCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/perfil3.png"))); // NOI18N
        lblCargo.setText("Cargo");
        jPanel1.add(lblCargo);
        lblCargo.setBounds(10, 10, 90, 40);

        lblOperador.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        lblOperador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/usuario (2).png"))); // NOI18N
        lblOperador.setText("Operador");
        jPanel1.add(lblOperador);
        lblOperador.setBounds(250, 10, 110, 40);

        radioTrocaMesa.setBackground(new java.awt.Color(38, 53, 61));
        buttonGroup1.add(radioTrocaMesa);
        radioTrocaMesa.setForeground(new java.awt.Color(255, 255, 255));
        radioTrocaMesa.setText("Troca Mesa");
        radioTrocaMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTrocaMesaActionPerformed(evt);
            }
        });
        jPanel1.add(radioTrocaMesa);
        radioTrocaMesa.setBounds(20, 340, 130, 23);

        radioTrocaGeral.setBackground(new java.awt.Color(38, 53, 61));
        buttonGroup1.add(radioTrocaGeral);
        radioTrocaGeral.setForeground(new java.awt.Color(255, 255, 255));
        radioTrocaGeral.setText("Troca Geral");
        radioTrocaGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioTrocaGeralActionPerformed(evt);
            }
        });
        jPanel1.add(radioTrocaGeral);
        radioTrocaGeral.setBounds(160, 340, 140, 23);

        bordas.add(jPanel1);
        jPanel1.setBounds(0, 0, 370, 524);

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/adicionas32x32.png"))); // NOI18N
        jLabel16.setText("Adicionar");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        btnLixeira.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        btnLixeira.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/Lixeira.png"))); // NOI18N
        btnLixeira.setText("Excluir");
        btnLixeira.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLixeiraMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout menuBarLayout = new javax.swing.GroupLayout(menuBar);
        menuBar.setLayout(menuBarLayout);
        menuBarLayout.setHorizontalGroup(
            menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBarLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLixeira, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        menuBarLayout.setVerticalGroup(
            menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLixeira, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bordas.add(menuBar);
        menuBar.setBounds(380, 460, 430, 58);

        tblMesas = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int  colIndex){
                return false;
            }
        };
        tblMesas.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        tblMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "MESA", "GARÇOM"
            }
        ));
        tblMesas.setRowHeight(22);
        tblMesas.setShowHorizontalLines(false);
        tblMesas.setShowVerticalLines(false);
        tblMesas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMesasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMesas);

        bordas.add(jScrollPane1);
        jScrollPane1.setBounds(380, 100, 430, 350);

        jCheckBoxTudo.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jCheckBoxTudo.setText("Listar todas as mesas");
        jCheckBoxTudo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxTudoMouseClicked(evt);
            }
        });
        bordas.add(jCheckBoxTudo);
        jCheckBoxTudo.setBounds(390, 60, 210, 29);

        jPanel2.setBackground(new java.awt.Color(38, 53, 61));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/fecharWhite24x24.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bordas.add(jPanel2);
        jPanel2.setBounds(780, 0, 40, 40);

        txtIdGarcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdGarcomActionPerformed(evt);
            }
        });
        bordas.add(txtIdGarcom);
        txtIdGarcom.setBounds(500, 10, 70, 30);

        txtIdMesa.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        bordas.add(txtIdMesa);
        txtIdMesa.setBounds(590, 10, 70, 30);
        bordas.add(txtIdNovoGarcom);
        txtIdNovoGarcom.setBounds(680, 10, 70, 29);

        getContentPane().add(bordas);
        bordas.setBounds(0, 0, 819, 523);

        setSize(new java.awt.Dimension(819, 523));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboGarcomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboGarcomItemStateChanged

    }//GEN-LAST:event_comboGarcomItemStateChanged

    private void comboGarcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGarcomActionPerformed
        
        if (!"Selecione...".equals(comboGarcom.getSelectedItem().toString())) {
            //desbloqueiaCampos();
            f.carregaComboFuncionario(comboNovoGarcom, "Garçom", comboGarcom.getSelectedItem().toString());
           
            // Caso o número de garçom listado seja maior que 1 - (Selecione...)
            if (comboGarcom.getItemCount()>2){               
            //Excluir após vaidação de Janiel
            //tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), filtro)));
            //modelMesas.redimensionaColunas(tblMesas);
            
            txtNumeroMesa.setText(null);
            txtIdGarcom.setText(f.localizaId(comboGarcom.getSelectedItem().toString()));
            estadoInicial();
            txtNumeroMesa.setEnabled(true);
            radioTrocaMesa.setVisible(true);
            radioTrocaGeral.setVisible(true);
            }
            tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), filtro)));
            txtNumeroMesa.setEnabled(true);
            modelMesas.redimensionaColunas(tblMesas);
        } else {
            estadoInicial();

        }


    }//GEN-LAST:event_comboGarcomActionPerformed

    private void limpaForm() {
        txtIdGarcom.setText(null);
        txtNumeroMesa.setText(null);
        txtIdMesa.setText(null);
    }
    private void txtIdGarcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdGarcomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdGarcomActionPerformed

    private void tblMesasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMesasMouseClicked

        if (radioTrocaMesa.isSelected()) {
            txtIdNovoGarcom.setText(f.localizaId(comboNovoGarcom.getSelectedItem().toString()));
            btnTrocaGarcom.setEnabled(true);
        }

        int linha = tblMesas.getSelectedRow();
        txtIdMesa.setText(tblMesas.getModel().getValueAt(linha, 0).toString());
        System.out.println("ID:" + txtIdMesa.getText());
        String nMesa = tblMesas.getModel().getValueAt(linha, 1).toString();
        txtNumeroMesa.setText(nMesa);

        String nomeFuncionario = tblMesas.getModel().getValueAt(linha, 2).toString(); // Seleciona nome do funcionário
        // comboGarcom.setSelectedItem(nomeFuncionario);
        txtIdGarcom.setText(f.localizaId(nomeFuncionario));
        btnLixeira.setEnabled(true);
        //selecionaIdMesa();
    }//GEN-LAST:event_tblMesasMouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // Fehcajanela
        this.dispose();
    }//GEN-LAST:event_jLabel15MouseClicked

    private void txtNumeroMesaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroMesaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarMesa();
        }


    }//GEN-LAST:event_txtNumeroMesaKeyPressed

    private void jCheckBoxTudoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxTudoMouseClicked

        // Exibe todas as mesas de todos os garçom
        if ("Listar todas as mesas" == jCheckBoxTudo.getText()) {
            jCheckBoxTudo.setText("Retornar");

            tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), true)));
            modelMesas.redimensionaColunas(tblMesas);
        } else {
            jCheckBoxTudo.setText("Listar todas as mesas");
            tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), false)));
            modelMesas.redimensionaColunas(tblMesas);
        }


    }//GEN-LAST:event_jCheckBoxTudoMouseClicked

    private void lblTrocaTodasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTrocaTodasMouseClicked
        // Troca garçom
        if (radioTrocaGeral.isSelected()) {
            if ("Selecione...".equals(comboNovoGarcom.getSelectedItem().toString())) {
                JOptionPane.showMessageDialog(this, "Escolha o novo Garçom para realizar a troca! ");
            } else {

                try {

                    txtIdNovoGarcom.setText(f.localizaId(comboNovoGarcom.getSelectedItem().toString()));
                } catch (Exception e) {

                }
                txtIdGarcom.setText(f.localizaId(comboGarcom.getSelectedItem().toString()));
                //txtIdNovoGarcom.setText(f.localizaId(comboNovoGarcom.getSelectedItem().toString()));

                Funcionario novo = new Funcionario();
                Funcionario antigo = new Funcionario();

                novo.setId(txtIdNovoGarcom.getText());
                try {

                    novo.setNome(comboNovoGarcom.getSelectedItem().toString());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Garçom inválido!");
                    System.out.println("br.com.bar.view.TelaCadastroDeMesas.lblTrocaTodasMouseClicked()" + e);
                }

                antigo.setId(txtIdGarcom.getText());
                antigo.setNome(comboGarcom.getSelectedItem().toString());

                int op = JOptionPane.showConfirmDialog(this, "Confirma a troca de todas as mesas do garçom " + antigo.getNome() + " para o garçom " + novo.getNome() + "?", "Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);

                if (op == JOptionPane.YES_OPTION) {

                    if (txtIdGarcom.getText().equals(txtIdNovoGarcom.getText())) {
                        JOptionPane.showMessageDialog(this, "Escolha um garçom diferente para continuar");
                    } else {

                        if (cm.trocaGarcom(antigo, novo)) {
                            JOptionPane.showMessageDialog(this, "Troca realizada com sucesso!");
                            tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), true)));
                            modelMesas.redimensionaColunas(tblMesas);
                            // Inicio do Registro de log
                            log.setFuncionalidade("Alterar");
                            log.setDescricao("Mudou todas as mesas do garçom -> "+antigo.getNome() + " para o garçom -> " + novo.getNome());
                            log.gravaLog(log);
                            //
                            txtNumeroMesa.setText(null);
                            panelTroca.setVisible(false);
                            //ocultaCampos();
                            estadoInicial();
                        }
                    }
                }
            }
            radioTrocaGeral.setSelected(false);
        }


    }//GEN-LAST:event_lblTrocaTodasMouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked

        adicionarMesa();

    }//GEN-LAST:event_jLabel16MouseClicked

    private void btnLixeiraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLixeiraMouseClicked
        // Exclui Mesam
        m.setId(txtIdMesa.getText());
        if (btnLixeira.isEnabled()) {

            int op = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir esta mesa?", "Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);

            if (op == JOptionPane.YES_OPTION) {

                // Inicio do registro de Log
                log.setFuncionalidade("Excluir");
                log.setDescricao("Excluiu a mesa " + txtNumeroMesa.getText());
                log.gravaLog(log);
                // Fim do registro de LOG
                if ("".equals(m.getId())) {

                } else {
                    if (cm.excluiMesa(m)) {

                        JOptionPane.showMessageDialog(this, "Mesa excluída com sucesso!");
                        tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), filtro)));
                        modelMesas.redimensionaColunas(tblMesas);
                        limpaForm();
                        btnLixeira.setEnabled(false);
                    }else {
                        JOptionPane.showMessageDialog(this, "A mesa selecionada está relacionada com vários pedidos e não pode ser excluída!","Atenção",JOptionPane.ERROR_MESSAGE);
                    }
                }

            }
        }
    }//GEN-LAST:event_btnLixeiraMouseClicked

    private void btnTrocaGarcomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTrocaGarcomMouseClicked
        // Altera Mesa
        if (radioTrocaMesa.isSelected()) {

            if (!"Selecione...".equals(comboNovoGarcom.getSelectedItem().toString())) {

                txtIdNovoGarcom.setText(f.localizaId(comboNovoGarcom.getSelectedItem().toString()));
                Mesa mesa = new Mesa();
                mesa.setId(txtIdMesa.getText());
                mesa.setNumeroMesa(txtNumeroMesa.getText());
                //Atenção - Verificar este fluxo//
                //A mudança de Status deve ocorrer neste momento?
                mesa.setStatus("0");
                mesa.setId_funcionario(txtIdNovoGarcom.getText());

                // Inicio do registro de log
                log.setFuncionalidade("Alterar");
                log.setDescricao("Alterou a mesa -> " + txtNumeroMesa.getText()
                        + " do garçom -> " + comboGarcom.getSelectedItem().toString() + " para o garçom -> " + comboNovoGarcom.getSelectedItem().toString());
                log.gravaLog(log);
                // Fim do registro de LOG
                if ("".equals(txtIdGarcom.getText())
                        || "".equals(txtIdNovoGarcom.getText())
                        || "".equals(txtNumeroMesa.getText())) {
                    JOptionPane.showMessageDialog(this, "Selecione uma mesa para realizar a troca!");
                } else if (txtIdGarcom.getText().equals(txtIdNovoGarcom.getText())) {
                    JOptionPane.showMessageDialog(this, "Selecione um garçom diferente para continuar!");
                } else {
                    int op = JOptionPane.showConfirmDialog(this, "Confirma a alteração de garçom para esta mesa?", "Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                    if (op == JOptionPane.YES_OPTION) {
                        if (cm.alteraMesa(mesa)) {
                            JOptionPane.showMessageDialog(this, "Alteração de garçom para a mesa informada realizada com sucesso!");
                            tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), true)));
                            modelMesas.redimensionaColunas(tblMesas);
                            btnTrocaGarcom.setEnabled(false);
                            txtNumeroMesa.setText(null);
                            ocultaCampos();
                            estadoInicial();
                        }
                        radioTrocaMesa.setSelected(false);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Escolha o novo Garçom para realizar a troca!");
            }
        }

    }//GEN-LAST:event_btnTrocaGarcomMouseClicked

    private void txtNumeroMesaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroMesaKeyReleased
        // Aceita apenas número
        txtNumeroMesa.setText(txtNumeroMesa.getText().replaceAll("[^0-9]", ""));
    }//GEN-LAST:event_txtNumeroMesaKeyReleased

    private void comboNovoGarcomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboNovoGarcomFocusGained
        //f.carregaComboFuncionario(comboNovoGarcom, "Garçom", comboGarcom.getSelectedItem().toString());
    }//GEN-LAST:event_comboNovoGarcomFocusGained

    private void comboNovoGarcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNovoGarcomActionPerformed

    }//GEN-LAST:event_comboNovoGarcomActionPerformed

    private void radioTrocaMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTrocaMesaActionPerformed
        panelTroca.setVisible(true);
        f.carregaComboFuncionario(comboNovoGarcom, "Garçom", comboGarcom.getSelectedItem().toString());
        txtNumeroMesa.setEnabled(false);
        btnTrocaGarcom.setEnabled(true);
        lblTrocaTodas.setEnabled(false);
    }//GEN-LAST:event_radioTrocaMesaActionPerformed

    private void radioTrocaGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioTrocaGeralActionPerformed
        panelTroca.setVisible(true);
        f.carregaComboFuncionario(comboNovoGarcom, "Garçom", comboGarcom.getSelectedItem().toString());
        btnTrocaGarcom.setEnabled(false);
        lblTrocaTodas.setEnabled(true);
        txtNumeroMesa.setEnabled(false);
    }//GEN-LAST:event_radioTrocaGeralActionPerformed

    private void selecionaIdMesa() {
        // Seleciona o id da mesa
        int linha = tblMesas.getSelectedRow();
        txtIdMesa.setText(tblMesas.getModel().getValueAt(linha, 0).toString());
        txtNumeroMesa.setText(tblMesas.getModel().getValueAt(linha, 2).toString());
        JOptionPane.showMessageDialog(this, tblMesas.getModel().getValueAt(linha, 2).toString());
        String nomeFuncionario = tblMesas.getModel().getValueAt(linha, 1).toString(); // Seleciona nome do funcionário
        comboGarcom.setSelectedItem(nomeFuncionario);
        txtIdGarcom.setText(f.localizaId(nomeFuncionario));
        btnLixeira.setEnabled(true);
    }

    private void estadoInicial() {

        //checkTrocaGeral.setEnabled(false);        
        //jCheckBoxTroca.setEnabled(false);         
        txtNumeroMesa.setEnabled(false);
        panelTroca.setVisible(false);
        radioTrocaMesa.setVisible(false);
        radioTrocaGeral.setVisible(false);

    }

    private void desbloqueiaCampos() {

        txtNumeroMesa.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroDeMesas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bordas;
    private javax.swing.JLabel btnLixeira;
    private javax.swing.JLabel btnTrocaGarcom;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboGarcom;
    private javax.swing.JComboBox<String> comboNovoGarcom;
    private javax.swing.JCheckBox jCheckBoxTudo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblNovoGarcom;
    private javax.swing.JLabel lblOperador;
    private javax.swing.JLabel lblTrocaTodas;
    private javax.swing.JPanel menuBar;
    private javax.swing.JPanel panelTroca;
    private javax.swing.JRadioButton radioTrocaGeral;
    private javax.swing.JRadioButton radioTrocaMesa;
    private javax.swing.JTable tblMesas;
    private javax.swing.JTextField txtIdGarcom;
    private javax.swing.JTextField txtIdMesa;
    private javax.swing.JTextField txtIdNovoGarcom;
    private javax.swing.JTextField txtNumeroMesa;
    // End of variables declaration//GEN-END:variables

    private void limparMesa() {
        txtIdMesa.setText(null);
        txtIdGarcom.setText(null);
        txtNumeroMesa.setText(null);

    }

    private void ocultaCampos() {

        panelTroca.setVisible(false);
        comboGarcom.setSelectedItem("Selecione...");
    }

    private void adicionarMesa() {
        // Localiza id do funcionário
        String nome = comboGarcom.getSelectedItem().toString();
        txtIdGarcom.setText(f.localizaId(nome));

        // Salva funcionário no banco
        m.setId_funcionario(txtIdGarcom.getText());
        m.setNumeroMesa(txtNumeroMesa.getText());
        m.setStatus("0");
        String garcom = comboGarcom.getSelectedItem().toString();
        // Solicita confirmação do Usuário
        try {
            int nmesa = Integer.parseInt(txtNumeroMesa.getText());
            // Verifica se o número da mesa é maior que zero ou se o campo está vazio
            if (nmesa <= 0 || "".equals(txtNumeroMesa.getText())) {
                JOptionPane.showMessageDialog(this, "Número de mesa inválido!");
            } else {
                int op = JOptionPane.showConfirmDialog(this, "Deseja incluir essa mesa para o garçom " + garcom + "?", "Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

                if (op == JOptionPane.YES_OPTION) {
                    // Registro de Log
                    log.setFuncionalidade("Adicionar");
                    log.setDescricao("Adicionou a mesa -> " + m.getNumeroMesa());

                    //Fim do registro de log
                    if (cm.adicionaMesa(m)) { // Adiciona mesa
                        tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), filtro)));
                        modelMesas.redimensionaColunas(tblMesas);
                        JOptionPane.showMessageDialog(this, "Mesa incluída com sucesso!");
                        log.gravaLog(log);
                    } else {
                        JOptionPane.showMessageDialog(this, "Este número de mesa já está sendo utilizado, informe outro!");
                    }

                }
            }
        } catch (HeadlessException | NumberFormatException e) {
            System.out.println("br.com.bar.view.TelaCadastroDeMesas.jLabel16MouseClicked()" + e);
            JOptionPane.showMessageDialog(this, "Por favor informe um número de mesa!");

        }

        //tblMesas.setModel(DbUtils.resultSetToTableModel(cm.listaMesa(comboGarcom.getSelectedItem().toString(), filtro)));
        //modelMesas.redimensionaColunas(tblMesas);
        txtNumeroMesa.setText(null);
    }
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bar.view;

import br.com.bar.dao.Backup;
import br.com.bar.dao.ConexaoBd;
import br.com.bar.dao.Log;
import br.com.bar.dao.ReportUtil;
import br.com.bar.model.DadosEmpresa;
import br.com.bar.model.DescontoPedido;
import br.com.bar.model.Funcionario;
import br.com.bar.model.MovimentacaoCaixa;
import br.com.bar.model.Pedido;
import br.com.bar.model.TableModelCaixa;
import br.com.bar.util.FormataValor;
import br.com.br.controler.ControlerCaixa;
import br.com.br.controler.ControlerFuncionario;
import br.com.br.controler.ControlerMesa;
import br.com.br.controler.ControlerParametro;
import br.com.br.controler.ControlerPedido;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import org.jfree.chart.*;
import org.jfree.data.category.DefaultCategoryDataset;
import br.com.bar.util.Util;
import br.com.br.controler.ControlerDadosEmpresa;
import java.awt.Color;
import java.io.IOException;
import java.sql.Timestamp;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import net.sf.jasperreports.engine.JasperPrintManager;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;

/**
 *
 * @author elias javax.swing.JFrame
 */
public class TelaCaixa extends JDialog {

    /**
     * Creates new form TelaCaixa
     */
    ControlerMesa cm = new ControlerMesa();
    ControlerPedido cp = new ControlerPedido();
    ControlerCaixa caixa = new ControlerCaixa();
    ControlerFuncionario func = new ControlerFuncionario();
    ControlerParametro cparam = new ControlerParametro();
    Connection conexao = ConexaoBd.conector();
    ControlerDadosEmpresa de = new ControlerDadosEmpresa();
    TableModelCaixa modelCaixa = new TableModelCaixa();
    ReportUtil rpu = new ReportUtil();

    Util utils = new Util();

    Log l = new Log();
    Date data = new Date();
    ArrayList<String> listAutoDesconto;

    public TelaCaixa() {
        initComponents();
        
        caixa.listaMesaOcupada(comboMesa);
        checkTxServico.setSelected(true);
        txtIdMEsa.setVisible(false);
        txtIdPedido.setVisible(false);

        //Desabilita o painel de movimentação e o painel de Gráfico
        panelMovimentacao.setVisible(false);
        panelGrafico.setVisible(false);
        // Formata a data retornando um string com o número correspondente ao mês atual
        String mes = utils.formataData(data);
        // Carrega o combobox com os meses menores que o atual
        carregaComboPeriodo(comboMes, mes);
        comboMes.setSelectedIndex(Integer.parseInt(mes) - 1);
        lblData.setText(utils.formataDataBr(data));
        bloqueiaControlePagamento();
        lblMsgStatus.setVisible(false);

        txtDesconto.setText("0,00");
        txtValorPago.setText("0,00");
        txtTroco.setText("0,00");
        lblCargo.setVisible(false);
        modelCaixa.redimensionaColunas(tblDetalhePedido);
        this.setModal(true);
        checkReimpressao.setEnabled(true);
        lblReceberPAgamento.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        painelEsquerdo = new javax.swing.JPanel();
        lblLLogo = new javax.swing.JLabel();
        panelMovimentacao = new javax.swing.JPanel();
        labelEntradas = new javax.swing.JLabel();
        labelSaidas = new javax.swing.JLabel();
        labelSaldo = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        lblSaidas = new javax.swing.JLabel();
        lblEntradas = new javax.swing.JLabel();
        checkExibir = new javax.swing.JCheckBox();
        panelGrafico = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboMes = new javax.swing.JComboBox<>();
        btnGrafico = new javax.swing.JLabel();
        lblOperador = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        painelDireito = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        percent = new javax.swing.JLabel();
        tgeral = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lblReceber = new javax.swing.JLabel();
        lblReceberPAgamento = new javax.swing.JLabel();
        btnFecharCaixa = new javax.swing.JLabel();
        labelFecharCaixa = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lblTotal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        checkTxServico = new javax.swing.JCheckBox();
        lblPago = new javax.swing.JLabel();
        txtValorPago = new javax.swing.JTextField();
        lblTroco = new javax.swing.JLabel();
        txtTroco = new javax.swing.JTextField();
        checkConcedeDesconto = new javax.swing.JCheckBox();
        txtDesconto = new javax.swing.JTextField();
        lblValorDesc = new javax.swing.JLabel();
        radioDinheiro = new javax.swing.JRadioButton();
        radioCartao = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        jSpinFieldPessoas = new javax.swing.JSpinner();
        btnImprimir = new javax.swing.JLabel();
        checkReimpressao = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        comboMesa = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetalhePedido = new javax.swing.JTable();
        txtIdMEsa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtIdPedido = new javax.swing.JTextField();
        btnListar = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        lblGarcom = new javax.swing.JLabel();
        lblContasAPagar = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblMsgStatus = new javax.swing.JLabel();
        lblCargo = new javax.swing.JLabel();
        lblNPedido = new javax.swing.JLabel();
        labelPedido = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        getContentPane().setLayout(null);

        painelEsquerdo.setBackground(new java.awt.Color(38, 53, 61));
        painelEsquerdo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        painelEsquerdo.add(lblLLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 22, 252, 180));

        panelMovimentacao.setBackground(new java.awt.Color(38, 53, 61));

        labelEntradas.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        labelEntradas.setForeground(new java.awt.Color(255, 255, 255));
        labelEntradas.setText("Entradas");

        labelSaidas.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        labelSaidas.setForeground(new java.awt.Color(255, 255, 255));
        labelSaidas.setText("Saídas");

        labelSaldo.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        labelSaldo.setForeground(new java.awt.Color(255, 255, 255));
        labelSaldo.setText("Saldo");

        lblSaldo.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblSaldo.setForeground(new java.awt.Color(255, 255, 255));
        lblSaldo.setText("Saldo");

        lblSaidas.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblSaidas.setForeground(new java.awt.Color(255, 255, 255));
        lblSaidas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSaidas.setText("jLabel14");

        lblEntradas.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblEntradas.setForeground(new java.awt.Color(255, 255, 255));
        lblEntradas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEntradas.setText("jLabel14");

        javax.swing.GroupLayout panelMovimentacaoLayout = new javax.swing.GroupLayout(panelMovimentacao);
        panelMovimentacao.setLayout(panelMovimentacaoLayout);
        panelMovimentacaoLayout.setHorizontalGroup(
            panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMovimentacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMovimentacaoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelEntradas)
                        .addGap(19, 19, 19)
                        .addComponent(lblEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelMovimentacaoLayout.createSequentialGroup()
                        .addGroup(panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSaidas, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSaldo))
                        .addGap(19, 19, 19)
                        .addGroup(panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSaidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        panelMovimentacaoLayout.setVerticalGroup(
            panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMovimentacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEntradas)
                    .addComponent(lblEntradas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSaidas, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSaidas, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelMovimentacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSaldo)
                    .addComponent(lblSaldo))
                .addGap(25, 25, 25))
        );

        painelEsquerdo.add(panelMovimentacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 356, -1, -1));

        checkExibir.setBackground(new java.awt.Color(38, 53, 61));
        checkExibir.setForeground(new java.awt.Color(255, 255, 255));
        checkExibir.setText("Exibir Movimentação");
        checkExibir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkExibirMouseClicked(evt);
            }
        });
        checkExibir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkExibirActionPerformed(evt);
            }
        });
        painelEsquerdo.add(checkExibir, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 326, 191, -1));

        panelGrafico.setBackground(new java.awt.Color(38, 53, 61));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Selecione o mês");

        btnGrafico.setForeground(new java.awt.Color(255, 255, 255));
        btnGrafico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/btnGráfico.png"))); // NOI18N
        btnGrafico.setText("Gerar Gráfico do Período");
        btnGrafico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGraficoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelGraficoLayout = new javax.swing.GroupLayout(panelGrafico);
        panelGrafico.setLayout(panelGraficoLayout);
        panelGraficoLayout.setHorizontalGroup(
            panelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGraficoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGrafico)
                    .addComponent(comboMes, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        panelGraficoLayout.setVerticalGroup(
            panelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGraficoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboMes, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGrafico)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        painelEsquerdo.add(panelGrafico, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 480, -1, -1));

        lblOperador.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblOperador.setForeground(new java.awt.Color(255, 255, 255));
        lblOperador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/usuario_branco.png"))); // NOI18N
        lblOperador.setText("jLabel2");
        painelEsquerdo.add(lblOperador, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 630, 100, 40));

        lblData.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblData.setForeground(new java.awt.Color(255, 255, 255));
        lblData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/calendar24x24.png"))); // NOI18N
        lblData.setText("jLabel5");
        painelEsquerdo.add(lblData, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 630, 120, 40));

        getContentPane().add(painelEsquerdo);
        painelEsquerdo.setBounds(0, 0, 300, 700);

        painelDireito.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(38, 53, 61));

        btnFechar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnFechar.setForeground(new java.awt.Color(255, 255, 255));
        btnFechar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/fecharWhite24x24.png"))); // NOI18N
        btnFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFecharMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(btnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        painelDireito.add(jPanel2);
        jPanel2.setBounds(330, 0, 50, 40);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Sub-total")));

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Total Parcial");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Valor do Serviço");

        percent.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 24)); // NOI18N
        percent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        percent.setText("0,00");

        tgeral.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 24)); // NOI18N
        tgeral.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tgeral.setText("0,00");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("R$");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("R$");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tgeral, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(percent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(percent, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tgeral, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelDireito.add(jPanel3);
        jPanel3.setBounds(10, 40, 350, 120);

        lblReceber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReceber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/money48x48.png"))); // NOI18N
        lblReceber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblReceberMouseClicked(evt);
            }
        });

        lblReceberPAgamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReceberPAgamento.setText("Receber Pagamento");

        btnFecharCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/Maquineta.png"))); // NOI18N
        btnFecharCaixa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFecharCaixaMouseClicked(evt);
            }
        });

        labelFecharCaixa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelFecharCaixa.setText("Fechar Caixa");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/power.png"))); // NOI18N
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Sair");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lblReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFecharCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(labelFecharCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblReceberPAgamento, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFecharCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblReceber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFecharCaixa)
                    .addComponent(lblReceberPAgamento)
                    .addComponent(jLabel3))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        painelDireito.add(jPanel6);
        jPanel6.setBounds(10, 570, 350, 120);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Total Geral"));

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTotal.setText("0,00");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel8.setText("R$");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addGap(10, 10, 10)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8)
            .addComponent(lblTotal)
        );

        painelDireito.add(jPanel7);
        jPanel7.setBounds(10, 170, 350, 80);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Forma de Pagamento")));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        checkTxServico.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        checkTxServico.setText("Taxa de Serviço");
        checkTxServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkTxServicoMouseClicked(evt);
            }
        });
        checkTxServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkTxServicoActionPerformed(evt);
            }
        });
        jPanel4.add(checkTxServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 23, 128, -1));

        lblPago.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        lblPago.setText("Valor Pago R$");
        jPanel4.add(lblPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 133, 110, 30));

        txtValorPago.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        txtValorPago.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorPago.setText("0,00");
        txtValorPago.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtValorPagoMouseClicked(evt);
            }
        });
        txtValorPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorPagoActionPerformed(evt);
            }
        });
        txtValorPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorPagoKeyPressed(evt);
            }
        });
        jPanel4.add(txtValorPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 163, 129, 40));

        lblTroco.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        lblTroco.setText("Troco R$");
        jPanel4.add(lblTroco, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 133, 74, 30));

        txtTroco.setEditable(false);
        txtTroco.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        txtTroco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTroco.setText("0,00");
        txtTroco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTrocoFocusGained(evt);
            }
        });
        txtTroco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrocoActionPerformed(evt);
            }
        });
        txtTroco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTrocoKeyPressed(evt);
            }
        });
        jPanel4.add(txtTroco, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 163, 134, 40));

        checkConcedeDesconto.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        checkConcedeDesconto.setText("Conceder Desconto");
        checkConcedeDesconto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkConcedeDescontoMouseClicked(evt);
            }
        });
        jPanel4.add(checkConcedeDesconto, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 52, -1, -1));

        txtDesconto.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        txtDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDesconto.setText("0,00");
        jPanel4.add(txtDesconto, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, 130, 40));

        lblValorDesc.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 14)); // NOI18N
        lblValorDesc.setText("Valor Desconto R$");
        jPanel4.add(lblValorDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 50, 141, 30));

        buttonGroup2.add(radioDinheiro);
        radioDinheiro.setText("Dinheiro");
        radioDinheiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioDinheiroMouseClicked(evt);
            }
        });
        jPanel4.add(radioDinheiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 23, -1, 30));

        buttonGroup2.add(radioCartao);
        radioCartao.setText("Cartão");
        radioCartao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioCartaoMouseClicked(evt);
            }
        });
        jPanel4.add(radioCartao, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 23, -1, 30));

        painelDireito.add(jPanel4);
        jPanel4.setBounds(10, 260, 350, 220);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("N. Pessoas");
        painelDireito.add(jLabel21);
        jLabel21.setBounds(20, 500, 65, 30);

        jSpinFieldPessoas.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        painelDireito.add(jSpinFieldPessoas);
        jSpinFieldPessoas.setBounds(90, 500, 51, 32);

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/Impressora32x32.png"))); // NOI18N
        btnImprimir.setText("Imprimir Parcial");
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirMouseClicked(evt);
            }
        });
        painelDireito.add(btnImprimir);
        btnImprimir.setBounds(220, 490, 125, 55);

        checkReimpressao.setText("Reimprimir");
        checkReimpressao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkReimpressaoActionPerformed(evt);
            }
        });
        painelDireito.add(checkReimpressao);
        checkReimpressao.setBounds(230, 550, 120, 23);

        getContentPane().add(painelDireito);
        painelDireito.setBounds(940, 0, 370, 690);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel6.setText("Mesa:");

        comboMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMesaActionPerformed(evt);
            }
        });

        tblDetalhePedido.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        tblDetalhePedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "PRODUTO", "QTD", "VLR UNITÁRIO R$", "VLR TOTAL R$"
            }
        ));
        tblDetalhePedido.setRowHeight(22);
        tblDetalhePedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalhePedidoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDetalhePedido);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Caixa");

        btnListar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/lopa32x32.png"))); // NOI18N
        btnListar.setText("Listar");
        btnListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListarMouseClicked(evt);
            }
        });
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        jLabel22.setText("Garçom:");

        lblGarcom.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N

        lblContasAPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/calendario (2).png"))); // NOI18N
        lblContasAPagar.setText("Contas a Pagar");
        lblContasAPagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblContasAPagarMouseClicked(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblMsgStatus.setText("jLabel10");

        lblCargo.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        lblCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/perfil3.png"))); // NOI18N
        lblCargo.setText("jLabel2");

        lblNPedido.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 18)); // NOI18N
        lblNPedido.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        labelPedido.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 18)); // NOI18N
        labelPedido.setText("Pedido:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblContasAPagar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblGarcom, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(126, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblNPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(comboMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtIdMEsa, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblMsgStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(lblCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jLabel6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdMEsa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMsgStatus)
                            .addComponent(lblCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(lblGarcom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblNPedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(labelPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContasAPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtIdMEsa, txtIdPedido});

        getContentPane().add(jPanel1);
        jPanel1.setBounds(300, 0, 640, 700);

        setSize(new java.awt.Dimension(1309, 693));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFecharMouseClicked
        //Sai da tela Caixa
        if ("Gerente".equals(lblCargo.getText())) {
            dispose();
        } else {
            dispose();
            TelaLogin login = new TelaLogin();
            login.setVisible(true);
            fazBackup();
        }
    }//GEN-LAST:event_btnFecharMouseClicked

    private void comboMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMesaActionPerformed
        btnListar.setEnabled(false);
        if (!"Selecione...".equals(comboMesa.getSelectedItem())) {
            btnListar.setEnabled(true);
        } else {
            lblReceber.setEnabled(false);
            lblReceberPAgamento.setEnabled(false);

            //checkCartao.setEnabled(false); ///- Excluir - checkCartao
            //checkDinheiro.setEnabled(false);///- Excluir
            radioCartao.setEnabled(false);
            radioDinheiro.setEnabled(false);

            btnImprimir.setEnabled(false);
            jSpinFieldPessoas.setEnabled(false);
            lblTotal.setEnabled(false);
            lblTotal.setText("0,00");
            percent.setEnabled(false);
            percent.setText("0,00");
            tgeral.setEnabled(false);
            tgeral.setText("0,00");
            checkTxServico.setEnabled(false);
            lblGarcom.setText(null);
            lblNPedido.setText(null);
            txtValorPago.setEnabled(false);
            txtValorPago.setText("0,00");
            checkConcedeDesconto.setEnabled(false);
            tblDetalhePedido.setModel(modelCaixa);
            modelCaixa.redimensionaColunas(tblDetalhePedido);
        }
    }//GEN-LAST:event_comboMesaActionPerformed

    private void checkTxServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkTxServicoMouseClicked
        // Retira taxa de serviço
        if (checkTxServico.isEnabled()) {

            txtTroco.setText("0,00");
            calculaTaxa();
            txtValorPago.setText(lblTotal.getText());
        }

    }//GEN-LAST:event_checkTxServicoMouseClicked

    private void txtTrocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrocoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrocoActionPerformed

    private void txtValorPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorPagoActionPerformed
        // Limpa campo ao digitar valor

    }//GEN-LAST:event_txtValorPagoActionPerformed

    private void txtValorPagoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtValorPagoMouseClicked
        // Limpa valor pago ao clicar
        if (txtValorPago.isEnabled()) {
            txtValorPago.setText(null);
        }
    }//GEN-LAST:event_txtValorPagoMouseClicked

    private void txtValorPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorPagoKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtTroco.requestFocus();
            double totalGeral = Double.parseDouble(lblTotal.getText().replace(",", "."));
            double totalPago = Double.parseDouble(txtValorPago.getText().replace(",", "."));
            txtValorPago.setText(String.format("%9.2f", totalPago));
            if (totalPago >= totalGeral) {
                txtTroco.setText(String.format("%9.2f", totalPago - totalGeral));

            } else {
                JOptionPane.showMessageDialog(this, "O valor pago não pode ser menor que o total da conta!");
                txtTroco.setText("00.00");
                txtValorPago.setText(lblTotal.getText());

            }
        }

    }//GEN-LAST:event_txtValorPagoKeyPressed

    private void txtTrocoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTrocoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            calculaTaxa();
        }
    }//GEN-LAST:event_txtTrocoKeyPressed

    private void checkTxServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkTxServicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkTxServicoActionPerformed

    private void txtTrocoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTrocoFocusGained

    }//GEN-LAST:event_txtTrocoFocusGained

    private void lblReceberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblReceberMouseClicked
        if (lblReceber.isEnabled()) {

            // Fecha pedido
            // Calcula valor
            int nPesoas = Integer.parseInt(jSpinFieldPessoas.getValue().toString());
            String tGeral = lblTotal.getText().replace(".", "");
            tGeral = tGeral.replace(",", ".");
            Double totalGeral = Double.parseDouble(tGeral);
            Double totalPessoas = totalGeral / nPesoas;
           
            // Instancia um produto
            Pedido p = new Pedido();

            //p.setTotal(lblTotal.getText().replaceAll(",", "."));
            p.setTotal(tGeral);
            String comissao = percent.getText().replace(".", "");
            comissao = comissao.replace(",", ".");
            p.setComissao(comissao);

            String vlrPago = txtValorPago.getText().replace(".", "");
            vlrPago = vlrPago.replace(",", ".");
            p.setTotalPago(vlrPago);

            p.setStatus("1");
            p.setOperador(lblOperador.getText());
            p.setId(txtIdPedido.getText());
            // Data de Fechamento do Pedido
            Date dataPedido = new Date();
            Timestamp datapedidoTms= new Timestamp(dataPedido.getTime());
            p.setData(String.valueOf(datapedidoTms));
            // Pega forma de pagamento selecionada
            if (radioCartao.isSelected()) {

                p.setFormaPagto("Cartão");
            } else {
                p.setFormaPagto("Dinheiro");
            }
            // Pega id da mesa.

            p.setCadMesaId(txtIdMEsa.getText());
            // Solicita confirmação do usuário
            int op = JOptionPane.showConfirmDialog(this, "Deseja realmente fechar este Pedido?", "Atenção!", JOptionPane.YES_OPTION, JOptionPane.ERROR_MESSAGE);

            if (op == JOptionPane.YES_OPTION) {  // Se confirmado fecha o pedido

                if (radioCartao.isSelected() || radioDinheiro.isSelected()) {
                    // Pega a data Atual
                    String dtAtual = utils.formataDataBr(data).replaceAll("/", "");
                    // Pega a hora atual
                    String horaAtual = utils.formataDataHora(data, "h");
                    //Gera Autenticacao
                    String autentica = cp.autentica(func.localizaId(lblGarcom.getText()), comboMesa.getSelectedItem().toString(), txtIdPedido.getText(), dtAtual + "." + horaAtual);
                    p.setAutenticacao(autentica);
                   
                    // Fecha o pedido após o recebimento
                    cp.fechaPedido(p);

                    //Início do Registro de log
                    l.setFuncionalidade("Recebimento");
                    l.setDescricao("Recebeu R$ " + p.getTotalPago() + " Pedido: " + txtIdPedido.getText() + " Comissão:" + p.getComissao());
                    l.gravaLog(l);

                    // Libera a mesa após o pagamento
                    cm.trocaStatusMesa(comboMesa.getSelectedItem().toString(), "0");
                    JOptionPane.showMessageDialog(null, "Pedido fechado com sucesso!");
                    // ===============================================================//

                    jSpinFieldPessoas.setValue(1);
                    // Registra desconto se o valor for > que 0
                    Funcionario f = new Funcionario();
                    Double desconto;
                    if (!"0,00".equals(txtDesconto.getText())) {

                        f.setId(listAutoDesconto.get(7));
                        String strDesc = txtDesconto.getText().replace(".", "");
                        strDesc = strDesc.replace(",", ".");
                        desconto = Double.parseDouble(strDesc);
                        // Instacia o objeto desconto e adiciona como parâmetro o motivo, o do idPedido e 
                        // o id do Funcionário eque concedeu o desconto
                        DescontoPedido descPedido = new DescontoPedido(desconto, listAutoDesconto.get(8), f, p);
                        //Registra desconto informado
                        caixa.registraDesconto(descPedido);
                    } else {

                        f.setId(func.localizaIdLogin(lblOperador.getText()));
                        System.out.println("Id do Funcionário:"+f.getId());
                        desconto = 0.0;
                        DescontoPedido descPedido = new DescontoPedido(desconto, "", f, p);
                        caixa.registraDesconto(descPedido);
                    }

                    // Imprime cupom de pagamento
                    HashMap dados = new HashMap();
                    Date dt = new Date();
                    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");

                    dados.put("data", df.format(dt));
                    dados.put("garcom", lblGarcom.getText());
                    dados.put("titulo", "COMPROVANTE DE PAGAMENTO");
                    String strTx = percent.getText().replace(".", "");
                    strTx = strTx.replace(",", ".");
                    dados.put("tx", Double.parseDouble(strTx));
                    dados.put("id_pedido", p.getId());
                    System.out.println(p.getId());
                    dados.put("npessoas", nPesoas); // Não tenho
                    dados.put("total_pessoas", totalPessoas); // Não tenho
                    DadosEmpresa dadosEmpresa = de.selecionaDados();
                    dados.put("mesa", comboMesa.getSelectedItem().toString());
                    dados.put("nome_empresa", dadosEmpresa.getNome_empresa());
                    dados.put("end", dadosEmpresa.getEndereco() + ", " + dadosEmpresa.getNumero() + ", " + dadosEmpresa.getBairro() + " - " + dadosEmpresa.getCep());
                    dados.put("end2", dadosEmpresa.getCidade() + " - " + dadosEmpresa.getUf() + " - " + dadosEmpresa.getTelefone());
                    dados.put("cnpj", dadosEmpresa.getCnpj());
                    dados.put("desc", Double.parseDouble(txtDesconto.getText().replaceAll(",", ".")));

                    try {
                        // Verifica o método de impressão 0 -> Impressção em tela 1 - Impressão direta
                        if (dadosEmpresa.getImprimir_na_tela() == 0) {
                            rpu.imprimeRelatorioTela("cupom2.jasper", dados);
                        } else {
                            rpu.impressaoDireta("cupom2.jasper", dados);
                        }

                        lblTotal.setText("0,00");
                        tgeral.setText("0,00");
                        percent.setText("0,00");

                    } catch (JRException e) {
                        System.out.println("br.com.bar.view.TelaCaixa.btnImprimirMouseClicked()");
                        lblTotal.setText("0,00");
                        tgeral.setText("0,00");
                        percent.setText("0,00");
                    }
                    // Fim da impressão de cupom
                    checkReimpressao.setEnabled(true);
                    cp.limpaTabela(tblDetalhePedido);
                    limpaForm();
                    lblTotal.setText("0,00");
                    tgeral.setText("0,00");
                    percent.setText("0,00");
                    txtValorPago.setText("0,00");
                    txtDesconto.setText("0,00");
                    lblReceber.setEnabled(false);
                    txtTroco.setText("0,00");
                    //checkCartao.setSelected(false); //Excluir
                   // checkDinheiro.setSelected(false); // Excluir
                    radioCartao.setSelected(false);
                    radioDinheiro.setSelected(false);
                    lblNPedido.setText(null);
                    lblEntradas.setText(String.format("%9.2f", caixa.totalizaEntradas()));
                    lblGarcom.setText(null);
                    atualizaCaixa();
                    bloqueiaControlePagamento();
                    // Desabilita ComboBox caso não exista mesa a serem listadas.
                    if (comboMesa.getItemCount() > 1) {
                        btnListar.setEnabled(false);
                    }
                    try {

                        caixa.listaMesaOcupada(comboMesa);

                    } catch (NullPointerException e) {

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Selecione uma forma de pagameto!");
                }

            }
        }
    }//GEN-LAST:event_lblReceberMouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        //Sai da tela Caixa
        if ("Gerente".equals(lblCargo.getText())) {
            dispose();
        } else {
            dispose();
            TelaLogin login = new TelaLogin();
            login.setVisible(true);
            fazBackup();
        }

    }//GEN-LAST:event_jLabel17MouseClicked

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        try {

            if (!"Selecione...".equals(comboMesa.getSelectedItem().toString())) {
                //checkCartao.setEnabled(true);// Excluir
                checkTxServico.setEnabled(true);
                //checkDinheiro.setEnabled(true);  // Excluir
                radioDinheiro.setEnabled(true);
                radioCartao.setEnabled(true);
                // Localiza o id da mesa selecionada
                txtIdMEsa.setText(cm.localizaIdMesa(comboMesa.getSelectedItem().toString()));
                //Localiza o id do  Pedido
                txtIdPedido.setText(cp.LocalizaIdPedido(comboMesa.getSelectedItem().toString()));
                lblNPedido.setText(txtIdPedido.getText());
                // Exibe detalhe do pedido por mesa de acordo com o id do pedido
                tblDetalhePedido.setModel(DbUtils.resultSetToTableModel(cp.detalhePorPedido(comboMesa.getSelectedItem().toString(), txtIdPedido.getText())));
                modelCaixa.redimensionaColunas(tblDetalhePedido);
                // Inicializa das variáveis TOTAL E totalGeral
                double total = 0;
                double totalGeral = 0;

                try {
                    // Lista resultado da pesquisa e totaliza os produtos do pedido
                    ResultSet rs = cp.detalhePorPedido(comboMesa.getSelectedItem().toString(), txtIdPedido.getText());

                  
                    while (rs.next()) {

                        NumberFormat nf = NumberFormat.getNumberInstance();

                        try {
                            total = nf.parse(rs.getString("VLR TOTAL R$")).doubleValue();
                            totalGeral = totalGeral + total;

                        } catch (ParseException ex) {
                            Logger.getLogger(TelaCaixa.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    // Formata e exibe o total geral do pedido
                    tgeral.setText(String.format("%9.2f", totalGeral));
                    tgeral.setEnabled(true);
                    lblTotal.setEnabled(true);
                    percent.setEnabled(true);
                    int linhas = tblDetalhePedido.getRowCount();
                    if (linhas == 0) {
                        percent.setEnabled(false);
                        tgeral.setEnabled(false);
                        lblTotal.setEnabled(false);
                        //checkCartao.setEnabled(false); // Excluir
                        //checkDinheiro.setEnabled(false); // Excluir
                        radioDinheiro.setEnabled(false);
                        radioCartao.setEnabled(false);
                        checkTxServico.setEnabled(false);
                    }

                } catch (NumberFormatException | SQLException e) {
                    System.out.println("br.com.bar.view.TelaCaixa.btnListarActionPerformed()" + e);
                }
                // Calcula a taxa de serviço somando ao total do pedido
                calculaTaxa();

                lblGarcom.setText(func.retornaGarcom(comboMesa.getSelectedItem().toString()));

               
                //

                txtValorPago.setText("0,00");
                txtTroco.setText("0,00");
                txtDesconto.setText("0,00");
                //lblReceber.setEnabled(true);
                // Substituição multipla na sequencia para evitar NumberFormatException: Multiple Points
                // Calsada pela formatação 0.000,00
                String sTotal = lblTotal.getText().replace(".", "");
                sTotal = sTotal.replace(",", ".");
                if (Double.parseDouble(sTotal) == 0) {
                    btnImprimir.setEnabled(false);
                    lblReceber.setEnabled(false);
                } else {
                    //lblReceber.setEnabled(true);
                }

                // Formata valores após listagem
                FormataValor fv = new FormataValor();
                tgeral.setText(fv.Formata(tgeral.getText()));
                lblTotal.setText(fv.Formata(lblTotal.getText()));

            }
        } catch (NumberFormatException e) {

        }

    }//GEN-LAST:event_btnListarActionPerformed

    private void btnImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseClicked
        if (btnImprimir.isEnabled()) {

            //Imprime cupom
            // Calcula valor
            DadosEmpresa dadosEmpresa = de.selecionaDados();

            int nPesoas = Integer.parseInt(jSpinFieldPessoas.getValue().toString());
            String strTotal = lblTotal.getText().replace(".", "");
            strTotal = strTotal.replace(",", ".");
            Double totalGeral = Double.parseDouble(strTotal);
            Double totalPessoas = totalGeral / nPesoas;
            System.out.println(nPesoas);
            
            //
            HashMap dados = new HashMap();
            Date dt = new Date();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");

            dados.put("data", df.format(dt));
            dados.put("id_pedido", txtIdPedido.getText());
            dados.put("garcom", lblGarcom.getText());
            dados.put("titulo", "PARCIAL DE CONSUMO");
            String strTx = percent.getText().replace(".", "");
            strTx = strTx.replace(",", ".");
            dados.put("tx", Double.parseDouble(strTx));
            dados.put("npessoas", nPesoas);
            dados.put("total_pessoas", totalPessoas);
            dados.put("mesa", comboMesa.getSelectedItem().toString());
            dados.put("nome_empresa", dadosEmpresa.getNome_empresa());
            dados.put("end", dadosEmpresa.getEndereco() + ", " + dadosEmpresa.getNumero() + ", " + dadosEmpresa.getBairro() + " - " + dadosEmpresa.getCep());
            dados.put("end2", dadosEmpresa.getCidade() + " - " + dadosEmpresa.getUf() + " - " + dadosEmpresa.getTelefone());
            dados.put("cnpj", dadosEmpresa.getCnpj());
            String strDesc = txtDesconto.getText().replace(".", "");
            strDesc = strDesc.replace(",", ".");
            dados.put("desc", Double.parseDouble(strDesc));
            System.out.println(dadosEmpresa.getImprimir_na_tela());
            try {
                if (dadosEmpresa.getImprimir_na_tela() == 0) {

                    rpu.imprimeRelatorioTela("cupom2.jasper", dados);

                } else {

                    rpu.impressaoDireta("cupom2.jasper", dados);
                }
            } catch (JRException e) {
                System.out.println("br.com.bar.view.TelaCaixa.btnImprimirMouseClicked()" + e);
            }
        }


    }//GEN-LAST:event_btnImprimirMouseClicked

    private void btnListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnListarMouseClicked

    private void btnFecharCaixaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFecharCaixaMouseClicked
        // Realiza o fechamento do caixa se o botão estiver habilitado
        if (btnFecharCaixa.isEnabled()) {

            Date dataAtual = new Date();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");

            MovimentacaoCaixa cx = new MovimentacaoCaixa();

            cx.setData(df.format(dataAtual));
            // Totaliza entradas e saida do 
            cx.setEntrada(caixa.totalizaEntradas(lblOperador.getText()));
            cx.setSaida(caixa.totalizaSaida(lblOperador.getText()));
            cx.setSaldo(caixa.totalizaEntradas(lblOperador.getText()) - caixa.totalizaSaida(lblOperador.getText()));
            cx.setStatus(1);
            cx.setIdFuncionario(Integer.parseInt(func.localizaIdLogin(lblOperador.getText())));
            // Conta os elementos de um combobox
            int op;
            if (comboMesa.getItemCount() > 1) {
                op = JOptionPane.showConfirmDialog(null, lblOperador.getText().toUpperCase() + " existem Mesas abertas! Tem certeza que deseja fechar o caixa mesmo assim?", "Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            } else {
                op = JOptionPane.showConfirmDialog(null, lblOperador.getText().toUpperCase() + " tem certeza que deseja fechar seu caixa?", "Atenção!", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            }

            if (op == JOptionPane.YES_OPTION) {

                if (caixa.temMovimentacao(cx.getIdFuncionario())) { // Verifica se existe movimentação no dia para este operador.
                    JOptionPane.showMessageDialog(null, "Caixa fechado, contate o administrador!");

                } else {
                    if (caixa.gravaMovimentacao(cx)) {
                        JOptionPane.showMessageDialog(null, "Caixa fechado com sucesso!");

                        // Desabilita botões Listar e Fechar caixa após o fechamento
                        btnListar.setEnabled(false);
                        btnFecharCaixa.setEnabled(false);
                        lblContasAPagar.setEnabled(false);
                        percent.setEnabled(false);
                        tgeral.setEnabled(false);
                        labelFecharCaixa.setEnabled(false);
                        lblReceber.setEnabled(false);
                        lblReceberPAgamento.setEnabled(false);

                        // Inicio do Registro de Log
                        l.setDescricao("Caixa");
                        l.setFuncionalidade("Fehamento de Caixa");
                        l.setUsuario(lblOperador.getText());
                        l.setDescricao("Fechamento do Caixa. ");
                        l.gravaLog(l);
                        // Fim do Registro de Log
                        //Desabilita o combo Mesa
                        comboMesa.setEnabled(false);
                        // Imprime relatório de caixa 
                        HashMap param = new HashMap();
                        Date dt = new Date();
                        param.put("data", df.format(dt));
                        param.put("id_perador", cx.getIdFuncionario());
                        param.put("titulo", "=-=-=-= Caixa Diário =-=-=-=");
                        // Troca imagem de status
                        caixa.statusCaixa(lblStatus, caixa.temMovimentacao(cx.getIdFuncionario()), lblMsgStatus);
                        DadosEmpresa dadosEmpresa = de.selecionaDados();
                        param.put("empresa", dadosEmpresa.getNome_empresa());
                        // Oculta paineis movimentação e painel gráfico
                        panelGrafico.setVisible(false);
                        panelMovimentacao.setVisible(false);

                        try {
                            ReportUtil rpu = new ReportUtil();
                            if (dadosEmpresa.getImprimir_na_tela() == 0) {

                                rpu.imprimeRelatorioTela("relMovimentacaoOperador.jasper", rpu.rodape(dadosEmpresa, param));

                            } else {
                                JasperPrint print = JasperFillManager.fillReport(cparam.getRELATORIOS() + "relMovimentacaoOperador.jasper", rpu.rodape(dadosEmpresa, param), conexao);
                                JasperPrintManager.printPage(print, 0, false);
                            }

                        } catch (JRException e) {
                            System.out.println("br.com.bar.view.TelaCaixa.btnFecharCaixaMouseClicked()" + e);
                        }
                        //*************************** TESTE FECHAMENTO ANTERIOR ***************************************
                        // Verifica se existe movimentação na data anterior caso existea executa o fechamento retroativo
                        if (caixa.temMovAnterior(lblOperador.getText())) {
                            // Fecha caixa anterio do operador informado
                            caixa.fechaCaixaAnterior(String.valueOf(lblOperador.getText()), String.valueOf(cx.getIdFuncionario()));

                        }

                    }
                }
            }
        }
    }//GEN-LAST:event_btnFecharCaixaMouseClicked

    private void lblContasAPagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblContasAPagarMouseClicked
        // Chama a tela de Cadastro de Contas a pagar
        TelaContasApagar contaApagar = new TelaContasApagar();
        contaApagar.recebeOperador(lblOperador.getText(), lblCargo.getText());
        contaApagar.setModal(true);
        contaApagar.setVisible(true);


    }//GEN-LAST:event_lblContasAPagarMouseClicked

    private void btnGraficoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGraficoMouseClicked
        // Cria gráfico do Período

        //Date dtAtual = new Date();
        //String mesAtual = String.valueOf(comboMes.getSelectedIndex()+1);
        String mesAtual = String.valueOf(comboMes.getSelectedIndex() + 1);
        System.out.println("Mês selecionado: " + mesAtual);
        ResultSet rs;
        rs = caixa.listaMovimentacao(mesAtual);

        // Cria data set para o gráfico
        DefaultCategoryDataset ds = new DefaultCategoryDataset();

        try {

            while (rs.next()) {
                ds.setValue(rs.getDouble("entradas"), "Entradas", rs.getString("data"));
                ds.setValue(rs.getDouble("saidas"), "Saídas", rs.getString("data"));
            }

        } catch (SQLException e) {
            System.out.println("Não há movimentação a ser listada ");
        }

        // Criando Gráfico de Barras'
        JFreeChart graficoBarras = ChartFactory.createBarChart("Movimentação Financeira " + comboMes.getSelectedItem().toString(), "Período", "Movimentação em R$", ds, PlotOrientation.VERTICAL, true, true, false);
        // Cria e recebe a categoria de plotagem do gráfico de barras
        CategoryPlot categoryPlot = graficoBarras.getCategoryPlot();
        // Atribui cores as barras do gráfico
        graficoBarras.getCategoryPlot().getRenderer().setSeriesPaint(0, Color.BLUE);
        graficoBarras.getCategoryPlot().getRenderer().setSeriesPaint(1, Color.RED);
        // Adiciona linhas de grade ao gráfico
        categoryPlot.setRangeGridlinePaint(Color.blue);
        // Cria janela do gráfico
        ChartFrame frame = new ChartFrame("Gráfico Movimentação do Período", graficoBarras);
        // Define a dimensão do gráfico
        frame.setSize(800, 600);
        //

        frame.setVisible(true);

    }//GEN-LAST:event_btnGraficoMouseClicked

    private void checkExibirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkExibirMouseClicked
        if ("Caixa Aberto".equals(lblMsgStatus.getText())) {
            if (checkExibir.isSelected()) {
                if ("Gerente".equals(lblCargo.getText())) {
                    //panelGrafico.setVisible(true);
                    panelMovimentacao.setVisible(true);
                    atualizaCaixa();
                } else {

                    atualizaCaixa();
                    panelMovimentacao.setVisible(true);
                    // panelGrafico.setVisible(false);
                }

            } else {
                panelMovimentacao.setVisible(false);
                //panelGrafico.setVisible(false);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Não é possível exibir a movimentação com o Caixa Fechado!");

        }

    }//GEN-LAST:event_checkExibirMouseClicked

    private void checkExibirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkExibirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkExibirActionPerformed

    private void tblDetalhePedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalhePedidoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDetalhePedidoMouseClicked

    private void checkConcedeDescontoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkConcedeDescontoMouseClicked
        // Chama a Tela de Autorização do Desconto
        // Passa dados do pedido
        if (checkConcedeDesconto.isEnabled()) {

            lblValorDesc.setEnabled(true);
            ArrayList<String> dadosDoPedido = new ArrayList<>();

            dadosDoPedido.add(tgeral.getText()); // Total da Conta (Sem Tx. de Serviço)
            dadosDoPedido.add(percent.getText()); // Tx. de Serviço
            dadosDoPedido.add(lblTotal.getText()); // Total + Taxa de Servico = Total Geral
            dadosDoPedido.add(comboMesa.getSelectedItem().toString()); // Numero da Mesa
            dadosDoPedido.add(txtIdPedido.getText()); // Número do Pedido

            // Forma de Pagamento
            String formaPagto = "";
            if (radioCartao.isSelected()) {
                formaPagto = radioCartao.getText();
            } else {
                formaPagto = radioDinheiro.getText();
            }
            dadosDoPedido.add(formaPagto);

            TelaAutorizacao ta = new TelaAutorizacao();
            ta.recebeValor(this, dadosDoPedido);
            ta.setModal(true);
            ta.setVisible(true);
        }


    }//GEN-LAST:event_checkConcedeDescontoMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_formFocusGained

    private void checkReimpressaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkReimpressaoActionPerformed
        // Reimpressão de cupom
        if (checkReimpressao.isEnabled()) {
            if (checkReimpressao.isSelected()) {
                TelaReImpressao rImpressao = new TelaReImpressao();
                rImpressao.setModal(true);
                rImpressao.setVisible(true);
                checkReimpressao.setSelected(false);
            }
        }
    }//GEN-LAST:event_checkReimpressaoActionPerformed

    private void radioDinheiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioDinheiroMouseClicked
        //Abilita textFild para recebimento em dinheiro
        if (radioDinheiro.isSelected()) {
            txtValorPago.setText(lblTotal.getText());
            txtValorPago.setEnabled(true);
            jSpinFieldPessoas.setEnabled(true);
            btnImprimir.setEnabled(true);
            checkConcedeDesconto.setEnabled(true);
            lblReceber.setEnabled(true);
            lblReceberPAgamento.setEnabled(true);
        }
    }//GEN-LAST:event_radioDinheiroMouseClicked

    private void radioCartaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioCartaoMouseClicked
        if (radioCartao.isSelected()) {
            txtValorPago.setText(lblTotal.getText());
            txtValorPago.setEnabled(false);
            txtTroco.setText("0,00");
            jSpinFieldPessoas.setEnabled(true);
            btnImprimir.setEnabled(true);
            checkConcedeDesconto.setEnabled(true);
            lblReceber.setEnabled(true);
            lblReceberPAgamento.setEnabled(true);
        }
    }//GEN-LAST:event_radioCartaoMouseClicked
    public void recebeOperador(String operador, String cargo) {
        lblLLogo.setIcon(utils.carregaLogo());
        lblOperador.setText(operador);
        lblCargo.setText(cargo);
        l.setUsuario(operador);
        String id = func.localizaIdLogin(operador);
        btnListar.setEnabled(false);
        caixa.statusCaixa(lblStatus, caixa.temMovimentacao(Integer.parseInt(id)), lblMsgStatus);

        if ("Caixa Fechado".equals(lblMsgStatus.getText())) {
            lblReceber.setEnabled(false);
            lblReceberPAgamento.setEnabled(false);
            btnFecharCaixa.setEnabled(false);
            btnListar.setEnabled(false);
            lblContasAPagar.setEnabled(false);
            comboMesa.setEnabled(false);
            lblReceberPAgamento.setEnabled(false);
            tgeral.setEnabled(false);
            percent.setEnabled(false);
            labelFecharCaixa.setEnabled(false);
        } else {
            if (comboMesa.getItemCount() == 1) {
                btnListar.setEnabled(false);
                comboMesa.setEnabled(false);
            }
        }

    }

    public void limpaForm() {
        txtIdMEsa.setText(null);
        txtIdPedido.setText(null);
        percent.setText(null);
        tgeral.setText(null);
        txtTroco.setText(null);
        txtValorPago.setText(null);
    }

    private void carregaComboPeriodo(JComboBox combo, String mes) {

        List<String> listaMes = new ArrayList<>();
        listaMes.add("Janeiro");
        listaMes.add("Fevereiro");
        listaMes.add("Março");
        listaMes.add("Abril");
        listaMes.add("Maio");
        listaMes.add("Junho");
        listaMes.add("Julho");
        listaMes.add("Agosto");
        listaMes.add("Setembro");
        listaMes.add("Outubro");
        listaMes.add("Novembro");
        listaMes.add("Dezembro");

        for (int i = 0; i < Integer.parseInt(mes); i++) {
            combo.addItem(listaMes.get(i));
        }

    }

    public void recebeDadosComDesconto(ArrayList<String> dados) {
        listAutoDesconto = dados;
        // total - tx de servico - total geral - Desconto - Mesa
        tgeral.setText(dados.get(0));
        percent.setText(dados.get(1));
        lblTotal.setText(dados.get(2));
        txtIdPedido.setText(dados.get(4));
        if ("Cartão".equals(dados.get(5))) {
            //checkCartao.setSelected(true);// Excluir
            radioCartao.setSelected(true);
        } else {
            //checkDinheiro.setSelected(true); // Excluir
            radioDinheiro.setSelected(rootPaneCheckingEnabled);
        }
        txtDesconto.setText(dados.get(6));
        comboMesa.setSelectedItem(dados.get(3));
        tblDetalhePedido.setModel(DbUtils.resultSetToTableModel(cp.detalhePorPedido(comboMesa.getSelectedItem().toString(), txtIdPedido.getText())));
        modelCaixa.redimensionaColunas(tblDetalhePedido);
       // checkCartao.setEnabled(true); // Excluir
        radioCartao.setEnabled(true);
        checkTxServico.setEnabled(true);
        //checkDinheiro.setEnabled(true); // Excluir
        radioDinheiro.setEnabled(true);
        txtValorPago.setText(dados.get(2));

    }

    private void fazBackup() {
        // Realiza Backup se o usuário tiver como cargo Caixa
        if ("Caixa".equals(lblCargo.getText())) {

            Backup b = new Backup();
            try {
                b.realizaBackup();
            } catch (IOException ex) {
                System.out.println("br.com.bar.view.TelaCaixa.<init>()" + ex);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCaixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCaixa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnFechar;
    private javax.swing.JLabel btnFecharCaixa;
    private javax.swing.JLabel btnGrafico;
    private javax.swing.JLabel btnImprimir;
    private javax.swing.JButton btnListar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox checkConcedeDesconto;
    private javax.swing.JCheckBox checkExibir;
    private javax.swing.JCheckBox checkReimpressao;
    private javax.swing.JCheckBox checkTxServico;
    private javax.swing.JComboBox<String> comboMes;
    private javax.swing.JComboBox<String> comboMesa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinFieldPessoas;
    private javax.swing.JLabel labelEntradas;
    private javax.swing.JLabel labelFecharCaixa;
    private javax.swing.JLabel labelPedido;
    private javax.swing.JLabel labelSaidas;
    private javax.swing.JLabel labelSaldo;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblContasAPagar;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEntradas;
    private javax.swing.JLabel lblGarcom;
    private javax.swing.JLabel lblLLogo;
    private javax.swing.JLabel lblMsgStatus;
    private javax.swing.JLabel lblNPedido;
    private javax.swing.JLabel lblOperador;
    private javax.swing.JLabel lblPago;
    private javax.swing.JLabel lblReceber;
    private javax.swing.JLabel lblReceberPAgamento;
    private javax.swing.JLabel lblSaidas;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTroco;
    private javax.swing.JLabel lblValorDesc;
    private javax.swing.JPanel painelDireito;
    private javax.swing.JPanel painelEsquerdo;
    private javax.swing.JPanel panelGrafico;
    private javax.swing.JPanel panelMovimentacao;
    private javax.swing.JLabel percent;
    private javax.swing.JRadioButton radioCartao;
    private javax.swing.JRadioButton radioDinheiro;
    private javax.swing.JTable tblDetalhePedido;
    private javax.swing.JLabel tgeral;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtIdMEsa;
    private javax.swing.JTextField txtIdPedido;
    private javax.swing.JTextField txtTroco;
    private javax.swing.JTextField txtValorPago;
    // End of variables declaration//GEN-END:variables

    private void calculaTaxa() {
        FormataValor fv = new FormataValor();

        double txServico = 0.10; // 10%
        //double totalConta = Double.parseDouble(lblTotal.getText().replaceAll(",", "."));
        String tConta = tgeral.getText().replace(".", "");
        tConta = tConta.replace(",", ".");
        double totalConta = Double.parseDouble(tConta);
        double totalTxServico = totalConta * txServico;
        String desc = txtDesconto.getText().replace(".", "");
        desc = desc.replace(",", ".");
        double desconto = Double.parseDouble(desc);
        double totalPago = 0;
        double troco = 0;

        if (checkTxServico.isSelected()) {

            //lblTotal.setText(String.format("%9.2f", (totalConta + totalTxServico) - desconto));
            double tTotal = (totalConta + totalTxServico) - desconto;
            lblTotal.setText(fv.Formata(String.valueOf(tTotal)));
            //txtTaxaServico.setText(String.format("%9.2f", totalTxServico));
            percent.setText(fv.Formata(String.valueOf(totalTxServico)));

        } else {
            //txtTotalGeral.setText(String.format("%9.2f", totalConta));
            //tgeral.setText(String.format("%9.2f", totalConta));
            lblTotal.setText(tgeral.getText());
            percent.setText("0,00");

        }

    }

    private void habilitaTextFildPagamento() {

        txtValorPago.setVisible(true);
        txtTroco.setVisible(true);
        lblPago.setVisible(true);
        lblTroco.setVisible(true);

    }

    private void desabilitaTextFildPagamento() {

        txtValorPago.setVisible(false);
        txtTroco.setVisible(false);
        lblPago.setVisible(false);
        lblTroco.setVisible(false);

    }

    // Atualiza movimentação do Caixa
    private void atualizaCaixa() {
        try {

            lblSaidas.setText("R$ " + String.format("%9.2f", caixa.totalizaSaida(lblOperador.getText())));
        } catch (NullPointerException e) {
            lblSaidas.setText("0.00");
        }

        try {

            lblEntradas.setText("R$ " + String.format("%9.2f", caixa.totalizaEntradas(lblOperador.getText())));
        } catch (NullPointerException e) {
            lblEntradas.setText("0.00");
        }

        double saldo = caixa.totalizaEntradas(lblOperador.getText()) - caixa.totalizaSaida(lblOperador.getText());

        lblSaldo.setText("RS" + String.format("%9.2f", saldo));
    }

    private void bloqueiaControlePagamento() {
        txtValorPago.setEnabled(false);
        txtTroco.setEnabled(false);
       //checkDinheiro.setEnabled(false);//Excluir
        //checkCartao.setEnabled(false);//Excluir
        radioDinheiro.setEnabled(false);
        radioCartao.setEnabled(false);
        //checkDinheiro.setSelected(false); // Redundante Excluir
        //checkCartao.setSelected(false);// Redundante Excluir
        checkTxServico.setEnabled(false);
        jSpinFieldPessoas.setEnabled(false);
        btnImprimir.setEnabled(false);
        checkConcedeDesconto.setEnabled(false);
        lblValorDesc.setEnabled(false);
        txtDesconto.setEnabled(false);
        lblReceber.setEnabled(false);
    }

}

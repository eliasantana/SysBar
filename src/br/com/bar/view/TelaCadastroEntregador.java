/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bar.view;

import br.com.bar.model.Entregador;
import br.com.bar.model.Funcionario;
import br.com.bar.util.ClienteViaCepWS;
import br.com.bar.util.Util;
import br.com.br.controler.ControlerEntregador;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author elias
 */
/*
    - public class TelaCadastroFuncionario extends javax.swing.JFrame
    - Teste de Alteração de herança da janela de jFrame para JDialog
 */
public class TelaCadastroEntregador extends JDialog {

    ControlerEntregador ce = new ControlerEntregador();
    TelaPesquisaEntregador tela;

    Util u = new Util();
    // Inicia Instância de log

    String nome = null;
    Entregador entregador;

    public TelaCadastroEntregador() {
        initComponents();
        txtCaminho.setVisible(false);
        txtId.setVisible(false);
        txtOperacao.setVisible(false);
        jtableGuias.setVisible(true);
        //Torna a janela Modal
        this.setModal(true);
        lblPerfil.setVisible(false);
        lblData.setVisible(false);
        lblOperador.setVisible(false);
    }

    public void recebeOperador(TelaPesquisaEntregador tela, String operador, String cargo, String operacao) {
        Date data = new Date();
        this.tela = tela;
        lblData.setText(u.formataDataBr(data));

        lblPerfil.setText(cargo);
        lblOperador.setText(operador);
        txtOperacao.setText(operacao);

        if ("Adicionar".equals(txtOperacao.getText())) {
            lblTiulo.setText("Incluir");
            lblSubTitulo.setText("Entregador");
            jDateValiadeCNH.setEnabled(false);

        } else if ("Alterar".equals(txtOperacao.getText())) {
            lblTiulo.setText("Alterar");
            lblSubTitulo.setText("Entregador");

        } else {
            lblTiulo.setText("Consultar");
            lblSubTitulo.setText("Entregador");
            bloqueiaTudo();
        }

        if ("Adicionar".equals(operacao)) {

        } else {

            //bloqueiaCampos();
        }
        if ("Alterar".equals(txtOperacao.getText()) && "".equals(txtCnh.getText())) {
            txtCnh.setEnabled(true);
            jDateValiadeCNH.setEnabled(false);
        }

    }

    public void recebeEntregador(Entregador e) {
        this.entregador = e;
        nome = e.getNome();
        txtNome.setText(e.getNome());
        txtEndereco.setText(e.getEndereco());
        txtBairro.setText(e.getBairro());
        txtCep.setText(e.getBairro());
        txtCidade.setText(e.getCidade());
        txtCep.setText(e.getCep());
        txtTelefone.setText(e.getTelefone_recado());
        txtEmail.setText(e.getEmail());
        txtComplemento.setText(e.getComplemento());
        txtNumero.setText(e.getNumero());
        txtRg.setText(e.getRg());
        txtCpf.setText(e.getCpf());
        txtCnh.setText(e.getCnh());
        txtTelRecado.setText(e.getTelefone());

        comboUf.setSelectedItem(e.getUf());
        comboVeiculo.setSelectedItem(e.getVeiculo());
        if (null != e.getValidade()) {

            jDateValiadeCNH.setDate(u.converteData(e.getValidade()));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        bordas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        lblUf = new javax.swing.JLabel();
        lblCep = new javax.swing.JLabel();
        lblComplemento = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        txtCep = new javax.swing.JFormattedTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        lblCpf = new javax.swing.JLabel();
        lblRg = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        txtCnh = new javax.swing.JFormattedTextField();
        txtNumero = new javax.swing.JTextField();
        lblEndereco = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        txtTelRecado = new javax.swing.JFormattedTextField();
        lblTelefone = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        txtRg = new javax.swing.JTextField();
        comboUf = new javax.swing.JComboBox<>();
        jDateValiadeCNH = new com.toedter.calendar.JDateChooser();
        lblCnH = new javax.swing.JLabel();
        lblValidade = new javax.swing.JLabel();
        lblVeiculo = new javax.swing.JLabel();
        lblMsg = new javax.swing.JLabel();
        comboVeiculo = new javax.swing.JComboBox<>();
        lblcelular = new javax.swing.JLabel();
        lblPlaca = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        lblTiulo = new javax.swing.JLabel();
        lblSubTitulo = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtCaminho = new javax.swing.JTextField();
        lblOperador = new javax.swing.JLabel();
        lblPerfil = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblFechar = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        txtOperacao = new javax.swing.JTextField();
        jtableGuias = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtHistorico = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        bordas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        bordas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        lblNome.setText("Nome *");
        jPanel1.add(lblNome);
        lblNome.setBounds(10, 8, 130, 20);

        txtNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNomeMouseClicked(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });
        jPanel1.add(txtNome);
        txtNome.setBounds(10, 27, 340, 30);

        txtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEnderecoKeyReleased(evt);
            }
        });
        jPanel1.add(txtEndereco);
        txtEndereco.setBounds(10, 80, 470, 30);

        lblUf.setText("UF *");
        jPanel1.add(lblUf);
        lblUf.setBounds(10, 160, 60, 20);

        lblCep.setText("CEP *");
        jPanel1.add(lblCep);
        lblCep.setBounds(250, 110, 70, 20);

        lblComplemento.setText("Complemento");
        jPanel1.add(lblComplemento);
        lblComplemento.setBounds(10, 110, 100, 20);

        txtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBairroKeyReleased(evt);
            }
        });
        jPanel1.add(txtBairro);
        txtBairro.setBounds(130, 130, 110, 30);

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCepKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCepKeyReleased(evt);
            }
        });
        jPanel1.add(txtCep);
        txtCep.setBounds(250, 130, 90, 30);

        lblCidade.setText("Cidade");
        jPanel1.add(lblCidade);
        lblCidade.setBounds(350, 110, 90, 20);

        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCidadeKeyReleased(evt);
            }
        });
        jPanel1.add(txtCidade);
        txtCidade.setBounds(350, 130, 200, 30);

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });
        jPanel1.add(txtEmail);
        txtEmail.setBounds(130, 180, 290, 30);

        lblEmail.setText("E-mail");
        jPanel1.add(lblEmail);
        lblEmail.setBounds(130, 160, 100, 20);

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyReleased(evt);
            }
        });
        jPanel1.add(txtTelefone);
        txtTelefone.setBounds(420, 230, 130, 30);

        lblCpf.setText("CPF *");
        jPanel1.add(lblCpf);
        lblCpf.setBounds(10, 210, 70, 20);

        lblRg.setText("RG *");
        jPanel1.add(lblRg);
        lblRg.setBounds(430, 160, 50, 20);

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCpfFocusLost(evt);
            }
        });
        txtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCpfKeyReleased(evt);
            }
        });
        jPanel1.add(txtCpf);
        txtCpf.setBounds(10, 230, 130, 30);

        txtCnh.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###########"))));
        txtCnh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCnhKeyReleased(evt);
            }
        });
        jPanel1.add(txtCnh);
        txtCnh.setBounds(150, 230, 130, 30);

        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroKeyReleased(evt);
            }
        });
        jPanel1.add(txtNumero);
        txtNumero.setBounds(490, 80, 60, 30);

        lblEndereco.setText("Endereço *");
        jPanel1.add(lblEndereco);
        lblEndereco.setBounds(10, 60, 90, 14);

        lblNumero.setText("Número *");
        jPanel1.add(lblNumero);
        lblNumero.setBounds(490, 60, 60, 14);

        try {
            txtTelRecado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelRecado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelRecadoKeyPressed(evt);
            }
        });
        jPanel1.add(txtTelRecado);
        txtTelRecado.setBounds(10, 280, 130, 30);

        lblTelefone.setText("Telefone *");
        jPanel1.add(lblTelefone);
        lblTelefone.setBounds(420, 210, 90, 20);

        txtComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComplementoKeyReleased(evt);
            }
        });
        jPanel1.add(txtComplemento);
        txtComplemento.setBounds(10, 130, 110, 30);

        lblBairro.setText("Bairro *");
        jPanel1.add(lblBairro);
        lblBairro.setBounds(130, 110, 100, 20);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/salvar24x24.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        btnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnSalvarKeyReleased(evt);
            }
        });
        jPanel1.add(btnSalvar);
        btnSalvar.setBounds(260, 320, 91, 32);

        txtRg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRgKeyReleased(evt);
            }
        });
        jPanel1.add(txtRg);
        txtRg.setBounds(430, 180, 120, 30);

        comboUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE" }));
        comboUf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboUfActionPerformed(evt);
            }
        });
        jPanel1.add(comboUf);
        comboUf.setBounds(10, 180, 110, 30);

        jDateValiadeCNH.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jDateValiadeCNHFocusGained(evt);
            }
        });
        jDateValiadeCNH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDateValiadeCNHMouseClicked(evt);
            }
        });
        jDateValiadeCNH.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateValiadeCNHPropertyChange(evt);
            }
        });
        jPanel1.add(jDateValiadeCNH);
        jDateValiadeCNH.setBounds(290, 230, 120, 30);

        lblCnH.setText("CNH *");
        jPanel1.add(lblCnH);
        lblCnH.setBounds(150, 210, 80, 20);

        lblValidade.setText("Validade CNH *");
        jPanel1.add(lblValidade);
        lblValidade.setBounds(290, 210, 140, 20);

        lblVeiculo.setText("Veiculo *");
        jPanel1.add(lblVeiculo);
        lblVeiculo.setBounds(150, 260, 90, 20);

        lblMsg.setFont(new java.awt.Font("Yu Gothic Light", 0, 12)); // NOI18N
        lblMsg.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(lblMsg);
        lblMsg.setBounds(370, 320, 340, 20);

        comboVeiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Moto", "Carro" }));
        comboVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVeiculoActionPerformed(evt);
            }
        });
        jPanel1.add(comboVeiculo);
        comboVeiculo.setBounds(150, 280, 110, 30);

        lblcelular.setText("Celular *");
        jPanel1.add(lblcelular);
        lblcelular.setBounds(10, 260, 90, 20);

        lblPlaca.setText("Placa *");
        jPanel1.add(lblPlaca);
        lblPlaca.setBounds(290, 260, 80, 20);

        try {
            txtPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAA-AAAA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlacaKeyReleased(evt);
            }
        });
        jPanel1.add(txtPlaca);
        txtPlaca.setBounds(290, 280, 100, 30);

        bordas.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 101, 720, 360));

        jPanel4.setBackground(new java.awt.Color(243, 156, 18));
        jPanel4.setLayout(null);

        lblTiulo.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 48)); // NOI18N
        lblTiulo.setText("Cadastro");
        jPanel4.add(lblTiulo);
        lblTiulo.setBounds(30, 0, 270, 78);

        lblSubTitulo.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        lblSubTitulo.setText("de Funcionários");
        jPanel4.add(lblSubTitulo);
        lblSubTitulo.setBounds(130, 50, 200, 40);
        jPanel4.add(txtId);
        txtId.setBounds(380, 10, 60, 30);
        jPanel4.add(txtCaminho);
        txtCaminho.setBounds(450, 10, 100, 30);

        lblOperador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/usuario (2).png"))); // NOI18N
        lblOperador.setText("Operador");
        jPanel4.add(lblOperador);
        lblOperador.setBounds(420, 50, 114, 30);

        lblPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/perfil3.png"))); // NOI18N
        lblPerfil.setText("Operador");
        jPanel4.add(lblPerfil);
        lblPerfil.setBounds(510, 50, 100, 30);

        jPanel5.setBackground(new java.awt.Color(52, 73, 94));

        lblFechar.setFont(new java.awt.Font("Yu Gothic", 1, 24)); // NOI18N
        lblFechar.setForeground(new java.awt.Color(255, 255, 255));
        lblFechar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/fecharWhite24x24.png"))); // NOI18N
        lblFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFecharMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.add(jPanel5);
        jPanel5.setBounds(680, 0, 40, 40);

        lblData.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/calendario24x24.png"))); // NOI18N
        lblData.setText("Data");
        jPanel4.add(lblData);
        lblData.setBounds(610, 50, 110, 30);
        jPanel4.add(txtOperacao);
        txtOperacao.setBounds(560, 10, 100, 30);

        bordas.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 720, 100));

        jtableGuias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableGuiasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtableGuiasMouseEntered(evt);
            }
        });

        txtHistorico.setColumns(20);
        txtHistorico.setRows(5);
        jScrollPane3.setViewportView(txtHistorico);

        jtableGuias.addTab("Histórico", jScrollPane3);

        bordas.add(jtableGuias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 720, 180));

        getContentPane().add(bordas);
        bordas.setBounds(0, 0, 722, 640);

        setSize(new java.awt.Dimension(723, 641));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFecharMouseClicked
        if ("Alterar".equals(txtOperacao.getText()) || "Detalhe".equals(txtOperacao.getText())) {
            this.dispose();

        } else {
            this.dispose();

        }
    }//GEN-LAST:event_lblFecharMouseClicked

    private void jtableGuiasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableGuiasMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jtableGuiasMouseEntered

    private void jtableGuiasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableGuiasMouseClicked

    }//GEN-LAST:event_jtableGuiasMouseClicked

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (valida()) {

            Entregador e = new Entregador();
            if ("Alterar".equals(lblTiulo.getText())) {

                e.setId(entregador.getId());
            }

            e.setNome(txtNome.getText());
            e.setEndereco(txtEndereco.getText());
            e.setNumero(txtNumero.getText());
            e.setComplemento(txtComplemento.getText());
            e.setBairro(txtBairro.getText());
            e.setCep(txtCep.getText());
            e.setCidade(txtCidade.getText());
            e.setUf(comboUf.getSelectedItem().toString());
            e.setEmail(txtEmail.getText());
            e.setRg(txtRg.getText());
            e.setCpf(txtCpf.getText());
            e.setCnh(txtCnh.getText());
            e.setTelefone_recado(txtTelefone.getText());
            e.setTelefone(txtTelRecado.getText());
            e.setVeiculo(comboVeiculo.getSelectedItem().toString());
            e.setHistorico(txtHistorico.getText());
            e.setStatus(0);
            Date data = jDateValiadeCNH.getDate();
            e.setValidade(u.formataDataBanco(data));
            e.setPlaca(txtPlaca.getText());
            if ("Incluir".equals(lblTiulo.getText())) {

                if (ce.adicionaEntregador(e)) {
                    JOptionPane.showMessageDialog(this, "Entregador adicionado com sucesso!");
                    tela.atualizaTabela();
                    this.dispose();
                }
            } else {
                if (ce.alteraEntregador(e)) {
                    JOptionPane.showMessageDialog(this, "Entregador alterado com sucesso!");
                    tela.atualizaTabela();
                    this.dispose();
                }
            }

        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnSalvarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarKeyReleased

    private void txtNumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyReleased
        // Aceita apenas número
        txtNumero.setText(txtNumero.getText().replaceAll("[^0-9]", ""));
        txtNumero.setText(u.tamanhoMaximo(txtNumero.getText(), 4));
        lblNumero.setForeground(Color.BLACK);
        lblMsg.setText(null);
    }//GEN-LAST:event_txtNumeroKeyReleased

    private void comboUfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboUfActionPerformed
        // TODO add your handling code here:
        lblUf.setForeground(Color.BLACK);
        lblMsg.setText(null);
    }//GEN-LAST:event_comboUfActionPerformed

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        // Limita tanho do campo NOME
        txtNome.setText(u.tamanhoMaximo(txtNome.getText(), 45));
        lblNome.setForeground(Color.BLACK);
        lblMsg.setText(null);
    }//GEN-LAST:event_txtNomeKeyReleased

    private void txtEnderecoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoKeyReleased
        // Limita tanho do campo ENDEREÇO
        txtEndereco.setText(u.tamanhoMaximo(txtEndereco.getText(), 45));
        lblEndereco.setForeground(Color.BLACK);
        lblMsg.setText(null);
    }//GEN-LAST:event_txtEnderecoKeyReleased

    private void txtRgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRgKeyReleased
        // Limita Tamanho do campo RG
        txtRg.setText(u.tamanhoMaximo(txtRg.getText(), 13));
        lblRg.setForeground(Color.BLACK);
        lblMsg.setText(null);

    }//GEN-LAST:event_txtRgKeyReleased

    private void txtCpfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyReleased
        // Limita tamanho do campo CPF
        txtCpf.setText(u.tamanhoMaximo(txtCpf.getText(), 14));
        lblCpf.setForeground(Color.BLACK);
        lblMsg.setText(null);
    }//GEN-LAST:event_txtCpfKeyReleased

    private void txtCnhKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCnhKeyReleased
        // Limita tamanho do campo CNH
        //txtCnh.setText(txtCnh.getText().replaceAll("[^0-9]", ""));
        txtCnh.setText(u.tamanhoMaximo(txtCnh.getText(), 11));
        lblCnH.setForeground(Color.BLACK);
        try {

            if (Integer.parseInt(txtCnh.getText()) > 0) {
                jDateValiadeCNH.setEnabled(true);
            } else {
                jDateValiadeCNH.setEnabled(false);
            }
        } catch (NumberFormatException e) {

        }
    }//GEN-LAST:event_txtCnhKeyReleased

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        // Limita tamnho do campo EMAIL
        txtEmail.setText(u.tamanhoMaximo(txtEmail.getText(), 45));
        lblEmail.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtTelefoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyReleased
        // limita tamanho do campo TELEFONE

    }//GEN-LAST:event_txtTelefoneKeyReleased

    private void txtBairroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBairroKeyReleased
        // Limita tamanho do campo BAIRRO
        txtBairro.setText(u.tamanhoMaximo(txtBairro.getText(), 35));
        lblBairro.setForeground(Color.black);
        lblMsg.setText(null);
    }//GEN-LAST:event_txtBairroKeyReleased

    private void txtComplementoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoKeyReleased
        // Limita tamanho do cmapo COMPLEMENTO
        txtComplemento.setText(u.tamanhoMaximo(txtComplemento.getText(), 35));
        lblComplemento.setForeground(Color.black);
    }//GEN-LAST:event_txtComplementoKeyReleased

    private void txtCidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyReleased
        // Limita tamanho do compo CIDADE
        txtCidade.setText(u.tamanhoMaximo(txtCidade.getText(), 40));
        lblCidade.setForeground(Color.black);
    }//GEN-LAST:event_txtCidadeKeyReleased

    private void txtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCpfFocusLost
        // Valida o cpf Informado
        if (Util.isCPF(txtCpf.getText())) {

        } else {
            JOptionPane.showMessageDialog(this, "Digite um CPF válido!");
            txtCpf.requestFocus();
        }
    }//GEN-LAST:event_txtCpfFocusLost

    private void txtNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNomeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeMouseClicked

    private void txtCepKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCepKeyReleased
        lblCep.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtCepKeyReleased

    private void jDateValiadeCNHFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateValiadeCNHFocusGained

    }//GEN-LAST:event_jDateValiadeCNHFocusGained

    private void jDateValiadeCNHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDateValiadeCNHMouseClicked

    }//GEN-LAST:event_jDateValiadeCNHMouseClicked

    private void jDateValiadeCNHPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateValiadeCNHPropertyChange
        lblMsg.setText(null);
        lblValidade.setForeground(Color.BLACK);
    }//GEN-LAST:event_jDateValiadeCNHPropertyChange

    private void txtTelRecadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelRecadoKeyPressed
        lblMsg.setText(null);
        lblcelular.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtTelRecadoKeyPressed

    private void txtCepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCepKeyPressed
        // Busca o CEP informado
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (evt.getKeyCode() == com.sun.glass.events.KeyEvent.VK_ENTER) {

                try {
                    String cep = txtCep.getText().replace("-", "");
                    String json = ClienteViaCepWS.buscarCep(cep);
                    Map mapa = ClienteViaCepWS.formataCepWs(json);
                    txtEndereco.setText(mapa.get("logradouro").toString());
                    txtBairro.setText(mapa.get("bairro").toString());
                    txtCidade.setText(mapa.get("localidade").toString());
                    txtComplemento.setText(mapa.get("complemento").toString());
                    comboUf.setSelectedItem(mapa.get("uf"));

                } catch (NullPointerException e) {

                }
            }
        }
    }//GEN-LAST:event_txtCepKeyPressed

    private void comboVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVeiculoActionPerformed
        lblVeiculo.setForeground(Color.black);
        lblMsg.setText(null);
    }//GEN-LAST:event_comboVeiculoActionPerformed

    private void txtPlacaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyReleased

        txtPlaca.setText(u.tamanhoMaximo(txtPlaca.getText(), 8));
        lblPlaca.setForeground(Color.BLACK);
        lblMsg.setText(null);
    }//GEN-LAST:event_txtPlacaKeyReleased

    public void limpaForm() {
        // Limpa formulário
        txtId.setText(null);
        txtNome.setText(null);
        txtEndereco.setText(null);
        txtBairro.setText(null);
        txtCep.setText(null);
        txtEmail.setText(null);
        txtTelefone.setText(null);
        txtCidade.setText(null);
        txtComplemento.setText(null);
        txtNumero.setText(null);
        comboUf.setSelectedItem("Selecione...");
        txtCaminho.setText(null);
        txtRg.setText(null);
        txtCpf.setText(null);
        txtCnh.setText(null);
        txtTelRecado.setText(null);
        jDateValiadeCNH.setDate(null);
        txtHistorico.setText(null);
    }

    private void bloqueiaTudo() {
        // Limpa formulário
        txtId.setEnabled(false);
        txtNome.setEnabled(false);
        txtEndereco.setEnabled(false);
        txtBairro.setEnabled(false);
        txtCep.setEnabled(false);
        txtEmail.setEnabled(false);
        txtTelefone.setEnabled(false);
        txtCidade.setEnabled(false);
        txtComplemento.setText(null);
        txtNumero.setEnabled(false);
        txtCaminho.setEnabled(false);
        txtRg.setEnabled(false);
        txtCpf.setEnabled(false);
        txtCnh.setEnabled(false);
        txtTelRecado.setEnabled(false);
        comboUf.setEnabled(false);
        jDateValiadeCNH.setEnabled(false);
        txtComplemento.setEnabled(false);
        btnSalvar.setEnabled(false);
        jtableGuias.setVisible(true);
        txtHistorico.setEnabled(false);
        comboVeiculo.setEnabled(false);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroEntregador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroEntregador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroEntregador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroEntregador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroEntregador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bordas;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> comboUf;
    private javax.swing.JComboBox<String> comboVeiculo;
    private com.toedter.calendar.JDateChooser jDateValiadeCNH;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jtableGuias;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblCnH;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblFechar;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblOperador;
    private javax.swing.JLabel lblPerfil;
    private javax.swing.JLabel lblPlaca;
    private javax.swing.JLabel lblRg;
    private javax.swing.JLabel lblSubTitulo;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblTiulo;
    private javax.swing.JLabel lblUf;
    private javax.swing.JLabel lblValidade;
    private javax.swing.JLabel lblVeiculo;
    private javax.swing.JLabel lblcelular;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCaminho;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JFormattedTextField txtCnh;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextArea txtHistorico;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtOperacao;
    private javax.swing.JFormattedTextField txtPlaca;
    private javax.swing.JTextField txtRg;
    private javax.swing.JFormattedTextField txtTelRecado;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void bloqueiaCampos() {
        if ("Alterar".equals(txtOperacao.getText())) {
            txtNome.setEnabled(false);
            txtRg.setEnabled(false);
            txtCpf.setEnabled(false);
            txtCnh.setEnabled(false);
        }

    }

    /* 
       Este método valida os campos do cadastro de Funcioinário retornando um Boolean
       como resposta final.
     */
    public boolean valida() {
        // Seta  resposta padrão com TRUE.
        boolean resp = true;

        if ("".equals(txtNome.getText())) {
            lblMsg.setText("*Informe um NOME para continuar!");
            txtNome.requestFocus();
            lblNome.setForeground(Color.red);
            resp = false;
        } else if ("".equals(txtEndereco.getText())) {
            lblMsg.setText("*Informe um ENDEREÇO para continuar!");
            txtEndereco.requestFocus();
            lblEndereco.setForeground(Color.red);
            resp = false;
        } else if ("".equals(txtNumero.getText())) {
            lblMsg.setText("*Informe o NÚMERO para continuar!");
            txtNumero.requestFocus();
            lblNumero.setForeground(Color.red);
            resp = false;
        } else if ("".equals(txtBairro.getText())) {
            lblMsg.setText("*Informe um BAIRRO para continuar!");
            txtBairro.requestFocus();
            lblBairro.setForeground(Color.red);
            resp = false;
        } else if ("     -   ".equals(txtCep.getText())
                || txtCep.getText().equals("00000-000") || txtCep.getText().equals("11111-111")
                || txtCep.getText().equals("22222-222") || txtCep.getText().equals("33333-333")
                || txtCep.getText().equals("44444-444") || txtCep.getText().equals("55555-555")
                || txtCep.getText().equals("66666-666") || txtCep.getText().equals("77777-777")
                || txtCep.getText().equals("88888-888") || txtCep.getText().equals("99999-999")
                || txtCep.getText().length() != 9) {
            lblMsg.setText("*Informe um CEP para continuar!");
            txtCep.requestFocus();
            lblCep.setForeground(Color.red);
            resp = false;
        } else if ("".equals(txtCidade.getText())) {
            lblMsg.setText("*Informe uma CIDADE para continuar!");
            lblCidade.setForeground(Color.RED);
            txtCidade.requestFocus();

            resp = false;
        } else if ("Selecione...".equals(comboUf.getSelectedItem().toString())) {
            lblMsg.setText("*Informe uma UF para continuar!");
            lblUf.setForeground(Color.red);
            comboUf.requestFocus();
            resp = false;
        } else if ("".equals(txtRg.getText())
                || txtRg.getText().equals("0000000000000") || txtRg.getText().equals("1111111111111")
                || txtRg.getText().equals("2222222222222") || txtRg.getText().equals("3333333333333")
                || txtRg.getText().equals("4444444444444") || txtRg.getText().equals("5555555555555")
                || txtRg.getText().equals("6666666666666") || txtRg.getText().equals("7777777777777")
                || txtRg.getText().equals("8888888888888") || txtRg.getText().equals("9999999999999")) {
            lblMsg.setText("*Informe um RG para continuar!");
            lblRg.setForeground(Color.RED);
            txtRg.requestFocus();
            resp = false;
        } else if (!Util.isCPF(txtCpf.getText())) {
            lblMsg.setText("*Informe um CPF para continuar!");
            lblCpf.setForeground(Color.RED);
            txtCpf.requestFocus();
            resp = false;
            /*
           - Caso CNH  seja preenchido segue com a verificação dos demais componentes do formulário
           - Se CNH seja preenchido, questiona o preenchimento da validade da CNH e segue com a validação
             dos demais componentes.
             */

        } else if (txtCnh.getText().isEmpty()) { // Se CNH estiver preenchida questiona a validade.
            if ("".equals(txtCnh.getText())
                    || txtCnh.getText().equals("00000000000") || txtCnh.getText().equals("11111111111")
                    || txtCnh.getText().equals("22222222222") || txtCnh.getText().equals("33333333333")
                    || txtCnh.getText().equals("44444444444") || txtCnh.getText().equals("55555555555")
                    || txtCnh.getText().equals("66666666666") || txtCnh.getText().equals("77777777777")
                    || txtCnh.getText().equals("88888888888") || txtCnh.getText().equals("99999999999")
                    || txtCnh.getText().length() != 11) {
                lblMsg.setText("*Informe uma CNH válida para continuar!");
                txtCnh.requestFocus();
                lblCnH.setForeground(Color.RED);
                resp = false;
            } else if (null == jDateValiadeCNH.getDate()) { // Se a data não for informada avisa o usuário.
                lblMsg.setText("*Informe uma Data de Validade para continuar!");
                jDateValiadeCNH.requestFocus();
                lblValidade.setForeground(Color.RED);
                resp = false;
            } else {  // Segue com a validação dos demais campos                            
                if ("(  )     -    ".equals(txtTelRecado.getText())
                        || txtTelRecado.getText().equals("(00)00000-0000") || txtTelRecado.getText().equals("(11)11111-1111")
                        || txtTelRecado.getText().equals("(22)22222-2222") || txtTelRecado.getText().equals("(33)33333-3333")
                        || txtTelRecado.getText().equals("(44)44444-4444") || txtTelRecado.getText().equals("(55)55555-5555")
                        || txtTelRecado.getText().equals("(66)66666-6666") || txtTelRecado.getText().equals("(77)77777-7777")
                        || txtTelRecado.getText().equals("(88)88888-8888") || txtTelRecado.getText().equals("(99)99999-9999")
                        || txtTelRecado.getText().length() != 14) {
                    lblMsg.setText("*Informe um NÚMERO DE CELULAR para continuar!");
                    txtTelRecado.requestFocus();
                    lblVeiculo.setForeground(Color.RED);
                    resp = false;
                }
            }
        } else { // Comtinua validação se CNH e Validade estiverem preechidos corretamente ou vazio.
            if (null == jDateValiadeCNH.getDate()) { // Se a data não for informada avisa o usuário.
                lblMsg.setText("*Informe uma Data de Validade para continuar!");
                jDateValiadeCNH.requestFocus();
                lblValidade.setForeground(Color.RED);
                resp = false;
            } else if ("(  )     -    ".equals(txtTelRecado.getText())
                    || txtTelRecado.getText().equals("(00)00000-0000") || txtTelRecado.getText().equals("(11)11111-1111")
                    || txtTelRecado.getText().equals("(22)22222-2222") || txtTelRecado.getText().equals("(33)33333-3333")
                    || txtTelRecado.getText().equals("(44)44444-4444") || txtTelRecado.getText().equals("(55)55555-5555")
                    || txtTelRecado.getText().equals("(66)66666-6666") || txtTelRecado.getText().equals("(77)77777-7777")
                    || txtTelRecado.getText().equals("(88)88888-8888") || txtTelRecado.getText().equals("(99)99999-9999")
                    || txtTelRecado.getText().length() != 14) {
                lblMsg.setText("*Informe um número de CELULAR para continuar!");
                txtTelRecado.requestFocus();
                lblcelular.setForeground(Color.RED);
                resp = false;
            } else if ("Selecione...".equals(comboVeiculo.getSelectedItem().toString())) {
                lblVeiculo.setForeground(Color.red);
                comboVeiculo.requestFocus();
                lblMsg.setText("Informe um veículo para continuar!");
                resp = false;
            } else if ("   -    ".equals(txtPlaca.getText())
                    || txtPlaca.getText().equals("000-0000") || txtPlaca.getText().equals("111-1111")
                    || txtPlaca.getText().equals("222-2222") || txtPlaca.getText().equals("333-3333")
                    || txtPlaca.getText().equals("444-4444") || txtPlaca.getText().equals("555-5555")
                    || txtPlaca.getText().equals("666-6666") || txtPlaca.getText().equals("777-7777")
                    || txtPlaca.getText().equals("888-8888") || txtPlaca.getText().equals("999-9999")) {
                lblMsg.setText("Informe uma placa válida!");
                txtPlaca.requestFocus();
                lblPlaca.setForeground(Color.red);
                resp = false;
            } else {
                Pattern pattern = Pattern.compile("[A-Z]{3}-[0-9]{4}");
                Matcher matcher = pattern.matcher(txtPlaca.getText().toUpperCase());
                if (matcher.matches()) {
                    resp = true;
                } else {
                    lblMsg.setText("Informe uma placa válida!");
                    txtPlaca.requestFocus();
                    lblPlaca.setForeground(Color.red);
                    resp = false;
                }

            }
        }
        return resp;
    }

    public void bloqueiacampos() {
        txtNome.setEnabled(false);
        txtEndereco.setEnabled(false);
        txtNumero.setEnabled(false);
        txtComplemento.setEnabled(false);
        txtBairro.setEnabled(false);
        txtCep.setEnabled(false);
        txtCidade.setEnabled(false);
        comboUf.setEnabled(false);
        txtEmail.setEnabled(false);
        txtRg.setEnabled(false);
        txtCpf.setEnabled(false);
        txtCnh.setEnabled(false);
        jDateValiadeCNH.setEnabled(false);
        txtTelefone.setEnabled(false);
        txtTelRecado.setEnabled(false);
        comboVeiculo.setEnabled(false);
        txtHistorico.setEnabled(false);

    }

}

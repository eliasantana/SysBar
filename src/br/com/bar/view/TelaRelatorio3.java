/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bar.view;

import br.com.bar.dao.Log;
import br.com.bar.dao.ReportUtil;
import br.com.bar.model.DadosEmpresa;
import br.com.bar.util.Util;
import br.com.br.controler.ControlerContasApagar;
import br.com.br.controler.ControlerDadosEmpresa;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Elias Santana
 */
public class TelaRelatorio3 extends javax.swing.JFrame {

    /**
     * Creates new form TelaRelatorio3
     */
    ArrayList<String> listaRelProduto = new ArrayList<>();
    ArrayList<String> listaRelFinanceiro = new ArrayList<>();
    ArrayList<String> listaRelFuncionario = new ArrayList<>();
    ArrayList<String> listaRelMesas = new ArrayList<>();

    ReportUtil rpu = new ReportUtil();
    ControlerContasApagar contasApagar = new ControlerContasApagar();
    ControlerDadosEmpresa ce = new ControlerDadosEmpresa();
    Util u = new Util();
    Log l = new Log();
    DadosEmpresa dados = ce.selecionaDados();

    public TelaRelatorio3() {
        initComponents();

        Calendar c = Calendar.getInstance();
        dtInicio.setDate(c.getTime());
        dtFim.setDate(c.getTime());

        dtInicio.setVisible(false);
        dtFim.setVisible(false);

        // Produto      
        listaRelProduto.add("Grupo de Produtos");
        listaRelProduto.add("Produtos em Estoque");
        listaRelProduto.add("Posição do Estoque - Compras");
        //listaRelProduto.add("Movimentação"); // Falta
        
        // Financeiro
        listaRelFinanceiro.add("Grupo Financeiro");
        listaRelFinanceiro.add("Comissão (Sintético)");
        listaRelFinanceiro.add("Comissão (Analítico)");
        listaRelFinanceiro.add("Contas Vecidas");
        listaRelFinanceiro.add("Conta à (Vencer)");
        listaRelFinanceiro.add("Saídas de Caixa");
        listaRelFinanceiro.add("Entradas de Caixa");
        listaRelFinanceiro.add("Caixa Sintético");
        // Funcionarios
        listaRelFuncionario.add("Funcionários Ativos");
        listaRelFuncionario.add("Funcionários Inativos");
        listaRelFuncionario.add("Funcionários Geral");
        // Mesas
        listaRelMesas.add("Relatório de Mesas");
    }

    public void listaRelatorios(ArrayList<String> lista) {
        comboReltorio.removeAllItems();
        for (int i = 0; i < lista.size(); i++) {
            comboReltorio.addItem(lista.get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        comboReltorio = new javax.swing.JComboBox<>();
        Imprimir = new javax.swing.JButton();
        dtInicio = new com.toedter.calendar.JDateChooser();
        dtFim = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblOperaodr = new javax.swing.JLabel();
        lblCargo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        radioProduto = new javax.swing.JRadioButton();
        radioFinanceiro = new javax.swing.JRadioButton();
        radioFuncionario = new javax.swing.JRadioButton();
        radioMesa = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setForeground(new java.awt.Color(102, 102, 102));
        setUndecorated(true);

        comboReltorio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboReltorioItemStateChanged(evt);
            }
        });
        comboReltorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboReltorioActionPerformed(evt);
            }
        });

        Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/Impressora.png"))); // NOI18N
        Imprimir.setText("Imprimir");
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(243, 156, 18));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(38, 53, 91));

        jLabel2.setFont(new java.awt.Font("Yu Gothic Light", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(307, 0, -1, -1));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Relatório");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 28, 155, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/cadastro-64.png"))); // NOI18N
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 20, -1, -1));

        lblOperaodr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/usuario (2).png"))); // NOI18N
        lblOperaodr.setText("Operador");
        jPanel2.add(lblOperaodr, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        lblCargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/perfil3.png"))); // NOI18N
        lblCargo.setText("Cargo");
        jPanel2.add(lblCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, -1, -1));

        buttonGroup1.add(radioProduto);
        radioProduto.setText("Produto");
        radioProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioProdutoMouseClicked(evt);
            }
        });

        buttonGroup1.add(radioFinanceiro);
        radioFinanceiro.setText("Financeiro");
        radioFinanceiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioFinanceiroMouseClicked(evt);
            }
        });

        buttonGroup1.add(radioFuncionario);
        radioFuncionario.setText("Funcionários");
        radioFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioFuncionarioMouseClicked(evt);
            }
        });

        buttonGroup1.add(radioMesa);
        radioMesa.setText("Mesa");
        radioMesa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioMesaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioFinanceiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioFuncionario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioMesa)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioProduto)
                    .addComponent(radioFinanceiro)
                    .addComponent(radioFuncionario)
                    .addComponent(radioMesa))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(Imprimir))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboReltorio, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboReltorio, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtFim, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Imprimir)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(342, 361));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // Fecha Janela
        dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void radioProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioProdutoMouseClicked
        // TODO add your handling code here:
        if (radioProduto.isSelected()) {
            listaRelatorios(listaRelProduto);
        }
    }//GEN-LAST:event_radioProdutoMouseClicked

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
        // Abre relatório na tela
        String combo = comboReltorio.getSelectedItem().toString();

        switch (combo) {

            case "Grupo de Produtos":
                try {
                    
                    rpu.imprimiRelatorioTela("relGruposProduto.jasper", rodape(dados));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Grupo de Produtos");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Grupo de Produtos" + e);
                }

                break;

            case "Produtos em Estoque":
                try {
                    rpu.imprimiRelatorioTela("relProdutos.jasper",rodape(dados));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " de Produtos em Estoque");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Produto em Estoque" + e);
                }
                break;

            case "Posição do Estoque - Compras":
                try {
                    rpu.imprimiRelatorioTela("relPosicaoEstoque.jasper",rodape(dados));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Posição do Estoque - Compras");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() Posição do Estoque" + e);
                }
                break;

            case "Grupo Financeiro":
                try {

                    rpu.imprimiRelatorioTela("relGruposFinanceiro.jasper",rodape(dados));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Grupo Financeiro");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Grupo Financeiro" + e);
                }
                break;

            case "Comissão (Sintético)":
                try {
                    HashMap map = new HashMap();
                    String dataInicio = u.formataDataBanco(dtInicio.getDate());
                    String dataFim = u.formataDataBanco(dtFim.getDate());

                    map.put("dtInicio", dataInicio);
                    map.put("dtFim", dataFim);

                    rpu.imprimiRelatorioTela("relSintComissao.jasper", rodape(dados, map));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Comissão (Sintético)");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Sintético" + e);
                }
                break;

            case "Comissão (Analítico)":
                try {
                    HashMap map = new HashMap();
                    String dataInicio = u.formataDataBanco(dtInicio.getDate());
                    String dataFim = u.formataDataBanco(dtFim.getDate());

                    map.put("dataInicio", dataInicio);
                    map.put("dataFim", dataFim);

                    rpu.imprimiRelatorioTela("comissaoGeral.jasper", rodape(dados, map));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Comissão (Analítico)");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Comissão Análítico" + e);
                }
                break;

            case "Contas Vecidas":
                try {

                    rpu.imprimiRelatorioTela("contasApagarVencidas.jasper",rodape(dados));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Contas Vecidas");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Contas Vencidas" + e);
                }
                break;

            case "Conta à (Vencer)":
                try {

                    rpu.imprimiRelatorioTela("contasAvencer.jasper",rodape(dados));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Conta à (Vencer)");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Contas a Vencer" + e);
                }
                break;

            case "Saídas de Caixa":
                try {
                    HashMap map = new HashMap();
                    String dataInicio = u.formataDataBanco(dtInicio.getDate());
                    String dataFim = u.formataDataBanco(dtFim.getDate());

                    map.put("dt_inicio", dataInicio);
                    map.put("dt_fim", dataFim);

                    rpu.imprimiRelatorioTela("Saidas.jasper", rodape(dados, map));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Saídas de Caixa");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Saída de Caixa" + e);
                }
                break;

            case "Entradas de Caixa":
                try {
                    HashMap map = new HashMap();
                    String dataInicio = u.formataDataBanco(dtInicio.getDate());
                    String dataFim = u.formataDataBanco(dtFim.getDate());

                    map.put("inicio", dataInicio);
                    map.put("fim", dataFim);

                    rpu.imprimiRelatorioTela("relCaixa.jasper", rodape(dados, map));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Entradas de Caixa");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Entrada de Caixa" + e);
                }
                break;
            case "Caixa Sintético":
                try {
                    HashMap map = new HashMap();
                    String dataInicio = u.formataDataBanco(dtInicio.getDate());
                    String dataFim = u.formataDataBanco(dtFim.getDate());

                    map.put("inicio", dataInicio);
                    map.put("fim", dataFim);

                    rpu.imprimiRelatorioTela("caixaSintetico.jasper", rodape(dados, map));
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Caixa Sintético");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Caixa Sintético" + e);
                }
                break;

            case "Funcionários Ativos":
                try {

                    HashMap map = new HashMap();
                    map.put("b", 0);
                    rpu.imprimiRelatorioTela("relFuncBlocDesb.jasper", map);
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Funcionários Ativos");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Funcionários Ativos" + e);
                }
                break;

            case "Funcionários Inativos":
                try {

                    HashMap map = new HashMap();
                    map.put("b", 1);
                    rpu.imprimiRelatorioTela("relFuncBlocDesb.jasper", map);
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Funcionários Inativos");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Funcionários Inativo" + e);
                }
                break;

            case "Funcionários Geral":
                try {

                    rpu.imprimiRelatorioTela("relGeralDeFuncionarios.jasper");
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Funcionários Geral");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Entrada de Caixa" + e);
                }
                break;

            case "Relatório de Mesas":
                try {

                    rpu.imprimiRelatorioTela("relatorioDeMesas.jasper");
                    // Registra Operação no Log
                    l.setFuncionalidade("Relatório");
                    l.setUsuario(lblOperaodr.getText());
                    l.setDescricao(l.getUsuario() + " Visualizou o " + l.getFuncionalidade() + " Relatório de Mesas");
                    l.gravaLog(l);

                } catch (JRException e) {
                    System.out.println("br.com.bar.view.TelaRelatorio3.ImprimirActionPerformed() - Relatório de Mesas" + e);
                }
                break;

        }

    }//GEN-LAST:event_ImprimirActionPerformed

    private void radioFinanceiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioFinanceiroMouseClicked
        if (radioFinanceiro.isSelected()) {
            listaRelatorios(listaRelFinanceiro);
        }
    }//GEN-LAST:event_radioFinanceiroMouseClicked

    private void comboReltorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboReltorioActionPerformed

    }//GEN-LAST:event_comboReltorioActionPerformed

    private void comboReltorioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboReltorioItemStateChanged
        try {

            String opcao = comboReltorio.getSelectedItem().toString();

            if (null == opcao) {
                desabilitaData();
            } else {
                switch (opcao) {

                    case "Comissão (Sintético)":
                        habilitaData();
                        break;
                    case "Contas Vecidas":
                        habilitaData();
                        break;
                    case "Comissão (Analítico)":
                        habilitaData();
                        break;
                    case "Saídas de Caixa":
                        habilitaData();
                        break;
                    case "Entradas de Caixa":
                        habilitaData();
                        break;
                    case "Caixa Sintético":
                        habilitaData();
                        break;

                    default:
                        desabilitaData();
                        break;
                }
            }

        } catch (NullPointerException e) {
            System.out.println("br.com.bar.view.TelaRelatorio3.comboReltorioItemStateChanged()");
        }
    }//GEN-LAST:event_comboReltorioItemStateChanged

    private void radioFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioFuncionarioMouseClicked
        if (radioFuncionario.isSelected()) {
            listaRelatorios(listaRelFuncionario);
        }
    }//GEN-LAST:event_radioFuncionarioMouseClicked

    private void radioMesaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioMesaMouseClicked
        if (radioMesa.isSelected()) {
            listaRelatorios(listaRelMesas);
        }
    }//GEN-LAST:event_radioMesaMouseClicked
    public void recebeOperador(String operador, String perfil) {
        lblOperaodr.setText(operador);
        lblCargo.setText(perfil);

    }

    public void habilitaData() {
        dtInicio.setVisible(true);
        dtFim.setVisible(true);
    }

    public void desabilitaData() {
        dtInicio.setVisible(false);
        dtFim.setVisible(false);
    }

    private HashMap rodape(DadosEmpresa d) {
        HashMap map = new HashMap();
        map.put("end1", dados.getNome_empresa() + " - " + " Endereço: " + dados.getEndereco() + "," + dados.getNumero() + " - " + "Bairro: " + dados.getBairro() + " - " + " Cidade: " + dados.getCidade());
        map.put("end2", "CEP: "+dados.getCep() + " - " + "UF :"  +dados.getUf() + " Telefone: " + dados.getTelefone() + " email-" + dados.getEmail());
        map.put("cnpj", "C.N.P.J " + dados.getCnpj());
        map.put("logo", d.getLogo());
        
        return map;
    }
    private HashMap rodape(DadosEmpresa d, HashMap map) {
        
        map.put("end1", dados.getNome_empresa() + " - " + " Endereço: " + dados.getEndereco() + "," + dados.getNumero() + " - " + "Bairro: " + dados.getBairro() + " - " + " Cidade: " + dados.getCidade());
        map.put("end2", "CEP: "+dados.getCep() + " - " + "UF :"  +dados.getUf() + " Telefone: " + dados.getTelefone() + " email-" + dados.getEmail());
        map.put("cnpj", "C.N.P.J " + dados.getCnpj());
        map.put("logo", d.getLogo());
        
        return map;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRelatorio3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRelatorio3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Imprimir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboReltorio;
    private com.toedter.calendar.JDateChooser dtFim;
    private com.toedter.calendar.JDateChooser dtInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblOperaodr;
    private javax.swing.JRadioButton radioFinanceiro;
    private javax.swing.JRadioButton radioFuncionario;
    private javax.swing.JRadioButton radioMesa;
    private javax.swing.JRadioButton radioProduto;
    // End of variables declaration//GEN-END:variables
}

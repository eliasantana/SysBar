/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bar.view;

import java.util.Timer;
import java.util.TimerTask;
import javax.swing.SwingUtilities;

/**
 *
 * @author Elias Santana
 */
public class TelaProcessaPamento extends javax.swing.JFrame {

    /**
     * Creates new form TelaProcessaPgamento
     */
    TimerTask task;
    int s;
    int limite = 6;
  
    public TelaProcessaPamento() {
        initComponents();    
        setAlwaysOnTop(true);
        cronometro();
    }

    public void recebeCodAutorizacao(int codAutorizacao) {
        /*
            Códigos de Retorno da API
            200	- Ok                        Este código é devolvido quando uma consulta resulta em sucesso.
            201	- Criado                    Este código é devolvido quando uma requisição é aceita para processamento.
            400	- Requisição inválida       Este erro é devolvido quando falta alguma informação na requisição ou ela é inválida por algum outro motivo. Por exemplo quando falta algum parâmetro obrigatório.
            403	- Permissão negada          Este erro é devolvido quando ocorre algum problema de permissão envolvendo o token de acesso.
            404	- Não encontrado            Este erro é devolvido quando não é encontrado algum recurso que é pesquisado.
            415	- Mídia inválida            Este erro é devolvido quando não é reconhecido o formato JSON enviado, devido a alguma falha de sintaxe.
            422	- Entidade improcessável    Não existe erro na requisição (sintaxe), porém há algum erro de semântica (por exemplo, tentar cancelar uma nota já cancelada)
            429	- Muitas requisições        Você ultrapassou o limite de requisições por minuto. Veja o limite de requisições
         */
      SwingUtilities.updateComponentTreeUI(this);
        
        switch (codAutorizacao){
            case 200:
                lblMensagem.setText("Autorizado!");
                break;
            case 201:
                lblMensagem.setText("Autorizado!");
                break;
            case 400:
                lblMensagem.setText("Requisição inválida!");
                break;
            case 403:
                lblMensagem.setText("Permissão Negada!");
                break;
            case 404:
                lblMensagem.setText("Não Encontrado!");
                break;
            case 415:
                lblMensagem.setText("Mídia Inválida!");
                break;
            case 422:
                lblMensagem.setText("Não foi possível processar o pedido...!");
                break;
            case 429:
                lblMensagem.setText("Muitas Requisições!");
                break;            
        }
        // Atualiza tela 
        SwingUtilities.updateComponentTreeUI(this);
        cronometro();
    }

    private void cronometro() {
        long segundos = 1000;
        Timer timer = new Timer();

        task = new TimerTask() {
            @Override
            public void run() {
                //Realiza uma contagem a incremento de 1 acadas segundo.

                s = s + 1;

                // Verifica se a contagem atingiu o limite informado para bloqueio da tela.
                if (s == limite) {

                    dispose();
                }
            }
        };
        timer.scheduleAtFixedRate(task, 0, segundos);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lblMensagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/bar/imagens/rese7_64x64.png"))); // NOI18N

        lblMensagem.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMensagem.setText("Aguarde..... Autorizando -  NFCe");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
            .addComponent(lblMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 375, 102);

        setSize(new java.awt.Dimension(375, 103));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProcessaPamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProcessaPamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProcessaPamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProcessaPamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProcessaPamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMensagem;
    // End of variables declaration//GEN-END:variables
}
